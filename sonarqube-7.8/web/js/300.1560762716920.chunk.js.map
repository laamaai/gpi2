{"version":3,"sources":["webpack:///./src/main/js/app/components/AdminContext.tsx","webpack:///./src/main/js/api/plugins.ts","webpack:///./node_modules/lodash/findLastIndex.js","webpack:///./src/main/js/components/common/RestartButton.tsx","webpack:///./src/main/js/app/components/nav/settings/PendingPluginsActionNotif.tsx","webpack:///./src/main/js/app/components/nav/settings/SystemRestartNotif.tsx","webpack:///./src/main/js/app/components/nav/settings/SettingsNav.tsx","webpack:///./src/main/js/app/components/AdminContainer.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./node_modules/lodash/toFinite.js","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./node_modules/lodash/toInteger.js","webpack:///./node_modules/lodash/_baseFindIndex.js","webpack:///./src/main/js/api/system.ts","webpack:///./src/main/js/api/nav.ts","webpack:///./src/main/js/app/utils/handleRequiredAuthorization.ts"],"names":["__webpack_require__","d","__webpack_exports__","defaultPendingPlugins","defaultSystemStatus","react__WEBPACK_IMPORTED_MODULE_0__","installing","removing","updating","AdminContext","fetchSystemStatus","fetchPendingPlugins","pendingPlugins","systemStatus","getAvailablePlugins","Object","_helpers_request__WEBPACK_IMPORTED_MODULE_1__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_2__","getPendingPlugins","getLastUpdates","updates","map","status","index","lodash_findLastIndex__WEBPACK_IMPORTED_MODULE_0___default","update","undefined","filter","_helpers_types__WEBPACK_IMPORTED_MODULE_3__","addChangelog","indexOf","previousUpdates","slice","__assign","getInstalledPlugins","f","then","_a","plugins","getInstalledPluginsWithUpdates","Promise","all","installed","plugin","updatePlugin","find","p","key","getPluginUpdates","installPlugin","data","uninstallPlugin","cancelPendingPlugins","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","max","nativeMin","min","module","exports","array","predicate","fromIndex","length","RestartButton","_super","_this","apply","this","arguments","handleConfirm","_api_system__WEBPACK_IMPORTED_MODULE_4__","props","__extends","prototype","render","className","_controls_ConfirmButton__WEBPACK_IMPORTED_MODULE_2__","confirmButtonText","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","modalBody","modalHeader","onConfirm","onClick","_ui_buttons__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_1__","disabled","PendingPluginsActionNotif","handleRevert","refreshPending","pending","index_js_exposed","Alert","display","variant","InstanceMessage","message","l10n","msg","idx","index_es","defaultMessage","id","values","nb","buttons","SystemRestartNotif","instance","system","link","react_router_es","to","pathname","settings_SettingsNav","SettingsNav","renderExtension","name","activeClassName","SettingsNav_extends","isSomethingActive","urls","path","window","location","some","url","baseUrl","isSecurityActive","isProjectsActive","isSystemActive","isMarketplace","renderConfigurationTab","organizationsEnabled","extensionsWithoutSupport","extensions","extension","Dropdown","overlay","tagName","onToggleClick","open","aria-expanded","aria-haspopup","classnames","active","href","DropdownIcon","renderProjectsTab","renderSecurityTab","notifComponent","hasSupportExtension","totalPendingPlugins","settings_PendingPluginsActionNotif","ContextNavBar","height","theme","notif","NavBarTabs","defaultProps","AdminContainer_AdminContainer","AdminContainer","mounted","state","fetchNavigationSettings","nav","r","setAdminPages","setState","api_system","waitRestartingDone","document","reload","AdminContainer_extends","componentDidMount","appState","canAdmin","handleRequiredAuthorization","componentWillUnmount","adminPages","_b","defaultTitle","Helmet_default","a","titleTemplate","Provider","value","children","mapDispatchToProps","es","rootReducer","Modal","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-small","size","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","submitting","stopSubmitting","handleCloseClick","event","preventDefault","currentTarget","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","header","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","onRequestClose","onCloseClick","onFormSubmit","onSubmitClick","ConfirmModal","handleSubmit","confirmData","renderModalContent","confirmDisable","headerDescription","isDestructive","_c","cancelButtonText","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","loading","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","autoFocus","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","toNumber","INFINITY","MAX_INTEGER","ConfirmButton","renderConfirmModal","modalHeaderDescription","confirmModalProps","_ConfirmModal__WEBPACK_IMPORTED_MODULE_1__","_ModalButton__WEBPACK_IMPORTED_MODULE_2__","modal","ModalButton","handleButtonClick","handleCloseModal","toFinite","remainder","fromRight","setLogLevel","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","restart","waitSystemUPStatus","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","level","slowThreshold","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","_getStore__WEBPACK_IMPORTED_MODULE_0__","_getHistory__WEBPACK_IMPORTED_MODULE_1__","_store_appState__WEBPACK_IMPORTED_MODULE_2__","store","history","returnTo","search","hash","dispatch","replace","query","return_to"],"mappings":"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","file":"js/300.1560762716920.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { PluginPendingResult } from '../../api/plugins';\n\nexport interface AdminContextInterface {\n  fetchSystemStatus: () => void;\n  fetchPendingPlugins: () => void;\n  pendingPlugins: PluginPendingResult;\n  systemStatus: T.SysStatus;\n}\n\nexport const defaultPendingPlugins = { installing: [], removing: [], updating: [] };\nexport const defaultSystemStatus = 'UP';\n\nconst AdminContext = React.createContext<AdminContextInterface>({\n  fetchSystemStatus: () => {},\n  fetchPendingPlugins: () => {},\n  pendingPlugins: defaultPendingPlugins,\n  systemStatus: defaultSystemStatus\n});\nexport default AdminContext;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { findLastIndex } from 'lodash';\nimport { getJSON, post } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { isDefined } from '../helpers/types';\n\nexport interface Plugin {\n  key: string;\n  name: string;\n  category?: string;\n  description?: string;\n  editionBundled?: boolean;\n  license?: string;\n  organizationName?: string;\n  homepageUrl?: string;\n  organizationUrl?: string;\n  issueTrackerUrl?: string;\n  termsAndConditionsUrl?: string;\n}\n\nexport interface Release {\n  version: string;\n  date: string;\n  description?: string;\n  changeLogUrl?: string;\n}\n\nexport interface Update {\n  status: string;\n  release?: Release;\n  requires: Plugin[];\n  previousUpdates?: Update[];\n}\n\nexport interface PluginPendingResult {\n  installing: PluginPending[];\n  updating: PluginPending[];\n  removing: PluginPending[];\n}\n\nexport interface PluginAvailable extends Plugin {\n  release: Release;\n  update: Update;\n}\n\nexport interface PluginPending extends Plugin {\n  version: string;\n  implementationBuild: string;\n}\n\nexport interface PluginInstalled extends PluginPending {\n  filename: string;\n  hash: string;\n  sonarLintSupported: boolean;\n  updatedAt: number;\n  updates?: Update[];\n}\n\nexport function getAvailablePlugins(): Promise<{\n  plugins: PluginAvailable[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/plugins/available').catch(throwGlobalError);\n}\n\nexport function getPendingPlugins(): Promise<PluginPendingResult> {\n  return getJSON('/api/plugins/pending').catch(throwGlobalError);\n}\n\nfunction getLastUpdates(updates: undefined | Update[]): Update[] {\n  if (!updates) {\n    return [];\n  }\n  const lastUpdate = ['COMPATIBLE', 'REQUIRES_SYSTEM_UPGRADE', 'DEPS_REQUIRE_SYSTEM_UPGRADE'].map(\n    status => {\n      const index = findLastIndex(updates, update => update.status === status);\n      return index > -1 ? updates[index] : undefined;\n    }\n  );\n  return lastUpdate.filter(isDefined);\n}\n\nfunction addChangelog(update: Update, updates?: Update[]) {\n  if (!updates) {\n    return update;\n  }\n  const index = updates.indexOf(update);\n  const previousUpdates = index > 0 ? updates.slice(0, index) : [];\n  return { ...update, previousUpdates };\n}\n\nexport function getInstalledPlugins(): Promise<PluginInstalled[]> {\n  return getJSON('/api/plugins/installed', { f: 'category' }).then(\n    ({ plugins }) => plugins,\n    throwGlobalError\n  );\n}\n\nexport function getInstalledPluginsWithUpdates(): Promise<PluginInstalled[]> {\n  return Promise.all([\n    getJSON('/api/plugins/installed', { f: 'category' }),\n    getJSON('/api/plugins/updates')\n  ])\n    .then(([installed, updates]) =>\n      installed.plugins.map((plugin: PluginInstalled) => {\n        const updatePlugin: PluginInstalled = updates.plugins.find(\n          (p: PluginInstalled) => p.key === plugin.key\n        );\n        if (updatePlugin) {\n          return {\n            ...updatePlugin,\n            ...plugin,\n            updates: getLastUpdates(updatePlugin.updates).map(update =>\n              addChangelog(update, updatePlugin.updates)\n            )\n          };\n        }\n        return plugin;\n      })\n    )\n    .catch(throwGlobalError);\n}\n\nexport function getPluginUpdates(): Promise<PluginInstalled[]> {\n  return Promise.all([getJSON('/api/plugins/updates'), getJSON('/api/plugins/installed')])\n    .then(([updates, installed]) =>\n      updates.plugins.map((updatePlugin: PluginInstalled) => {\n        const updates = getLastUpdates(updatePlugin.updates).map(update =>\n          addChangelog(update, updatePlugin.updates)\n        );\n        const plugin = installed.plugins.find((p: PluginInstalled) => p.key === updatePlugin.key);\n        if (plugin) {\n          return {\n            ...plugin,\n            ...updatePlugin,\n            updates\n          };\n        }\n        return { ...updatePlugin, updates };\n      })\n    )\n    .catch(throwGlobalError);\n}\n\nexport function installPlugin(data: { key: string }): Promise<void | Response> {\n  return post('/api/plugins/install', data).catch(throwGlobalError);\n}\n\nexport function uninstallPlugin(data: { key: string }): Promise<void | Response> {\n  return post('/api/plugins/uninstall', data).catch(throwGlobalError);\n}\n\nexport function updatePlugin(data: { key: string }): Promise<void | Response> {\n  return post('/api/plugins/update', data).catch(throwGlobalError);\n}\n\nexport function cancelPendingPlugins(): Promise<void | Response> {\n  return post('/api/plugins/cancel_all').catch(throwGlobalError);\n}\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport ConfirmButton from '../controls/ConfirmButton';\nimport { translate } from '../../helpers/l10n';\nimport { restart } from '../../api/system';\nimport { Button } from '../ui/buttons';\n\ninterface Props {\n  className?: string;\n  fetchSystemStatus: () => void;\n  systemStatus: T.SysStatus;\n}\n\nexport default class RestartButton extends React.PureComponent<Props> {\n  handleConfirm = () => {\n    return restart().then(this.props.fetchSystemStatus);\n  };\n\n  render() {\n    const { className, systemStatus } = this.props;\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('restart')}\n        modalBody={\n          <>\n            <p className=\"spacer-top spacer-bottom\">\n              {translate('system.are_you_sure_to_restart')}\n            </p>\n            <p>{translate('system.forcing_shutdown_not_recommended')}</p>\n          </>\n        }\n        modalHeader={translate('system.restart_server')}\n        onConfirm={this.handleConfirm}>\n        {({ onClick }) => (\n          <Button\n            className={classNames('button-red', className)}\n            disabled={systemStatus !== 'UP'}\n            onClick={onClick}>\n            {systemStatus === 'RESTARTING'\n              ? translate('system.restart_in_progress')\n              : translate('system.restart_server')}\n          </Button>\n        )}\n      </ConfirmButton>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport InstanceMessage from '../../../../components/common/InstanceMessage';\nimport RestartButton from '../../../../components/common/RestartButton';\nimport { Alert } from '../../../../components/ui/Alert';\nimport { Button } from '../../../../components/ui/buttons';\nimport { cancelPendingPlugins, PluginPendingResult } from '../../../../api/plugins';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  fetchSystemStatus: () => void;\n  pending: PluginPendingResult;\n  refreshPending: () => void;\n  systemStatus: T.SysStatus;\n}\n\nexport default class PendingPluginsActionNotif extends React.PureComponent<Props> {\n  handleRevert = () => {\n    cancelPendingPlugins().then(this.props.refreshPending, () => {});\n  };\n\n  render() {\n    const { installing, updating, removing } = this.props.pending;\n    const hasPendingActions = installing.length || updating.length || removing.length;\n    if (!hasPendingActions) {\n      return null;\n    }\n\n    return (\n      <Alert className=\"js-pending\" display=\"banner\" variant=\"info\">\n        <div className=\"display-flex-center\">\n          <span className=\"little-spacer-right\">\n            <InstanceMessage message={translate('marketplace.instance_needs_to_be_restarted_to')} />\n          </span>\n          {[\n            { length: installing.length, msg: 'marketplace.install_x_plugins' },\n            { length: updating.length, msg: 'marketplace.update_x_plugins' },\n            { length: removing.length, msg: 'marketplace.uninstall_x_plugins' }\n          ]\n            .filter(({ length }) => length > 0)\n            .map(({ length, msg }, idx) => (\n              <span key={msg}>\n                {idx > 0 && '; '}\n                <FormattedMessage\n                  defaultMessage={translate(msg)}\n                  id={msg}\n                  values={{ nb: <strong>{length}</strong> }}\n                />\n              </span>\n            ))}\n\n          <RestartButton\n            className=\"spacer-left\"\n            fetchSystemStatus={this.props.fetchSystemStatus}\n            systemStatus={this.props.systemStatus}\n          />\n          <Button className=\"spacer-left js-cancel-all\" onClick={this.handleRevert}>\n            {translate('marketplace.revert')}\n          </Button>\n        </div>\n      </Alert>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from '../../../../components/ui/Alert';\nimport { translate } from '../../../../helpers/l10n';\nimport { getInstance } from '../../../../helpers/system';\n\nexport default function SystemRestartNotif() {\n  return (\n    <Alert display=\"banner\" variant=\"info\">\n      <FormattedMessage\n        defaultMessage={translate('system.instance_restarting')}\n        id=\"system.instance_restarting\"\n        values={{\n          instance: getInstance(),\n          link: (\n            <Link to={{ pathname: '/admin/background_tasks' }}>\n              {translate('background_tasks.page')}\n            </Link>\n          )\n        }}\n      />\n    </Alert>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { IndexLink, Link } from 'react-router';\nimport PendingPluginsActionNotif from './PendingPluginsActionNotif';\nimport SystemRestartNotif from './SystemRestartNotif';\nimport ContextNavBar from '../../../../components/nav/ContextNavBar';\nimport Dropdown from '../../../../components/controls/Dropdown';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport NavBarTabs from '../../../../components/nav/NavBarTabs';\nimport * as theme from '../../../theme';\nimport { PluginPendingResult } from '../../../../api/plugins';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  extensions: T.Extension[];\n  fetchPendingPlugins: () => void;\n  fetchSystemStatus: () => void;\n  location: {};\n  organizationsEnabled?: boolean;\n  pendingPlugins: PluginPendingResult;\n  systemStatus: T.SysStatus;\n}\n\nexport default class SettingsNav extends React.PureComponent<Props> {\n  static defaultProps = {\n    extensions: []\n  };\n\n  isSomethingActive(urls: string[]): boolean {\n    const path = window.location.pathname;\n    return urls.some((url: string) => path.indexOf((window as any).baseUrl + url) === 0);\n  }\n\n  isSecurityActive() {\n    const urls = [\n      '/admin/users',\n      '/admin/groups',\n      '/admin/permissions',\n      '/admin/permission_templates'\n    ];\n    return this.isSomethingActive(urls);\n  }\n\n  isProjectsActive() {\n    const urls = ['/admin/projects_management', '/admin/background_tasks'];\n    return this.isSomethingActive(urls);\n  }\n\n  isSystemActive() {\n    const urls = ['/admin/system'];\n    return this.isSomethingActive(urls);\n  }\n\n  isMarketplace() {\n    const urls = ['/admin/marketplace'];\n    return this.isSomethingActive(urls);\n  }\n\n  renderExtension = ({ key, name }: T.Extension) => {\n    return (\n      <li key={key}>\n        <Link activeClassName=\"active\" to={`/admin/extension/${key}`}>\n          {name}\n        </Link>\n      </li>\n    );\n  };\n\n  renderConfigurationTab() {\n    const { organizationsEnabled } = this.props;\n    const extensionsWithoutSupport = this.props.extensions.filter(\n      extension => extension.key !== 'license/support'\n    );\n    return (\n      <Dropdown\n        overlay={\n          <ul className=\"menu\">\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/settings\">\n                {translate('settings.page')}\n              </IndexLink>\n            </li>\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/settings/encryption\">\n                {translate('property.category.security.encryption')}\n              </IndexLink>\n            </li>\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/custom_metrics\">\n                {translate('custom_metrics.page')}\n              </IndexLink>\n            </li>\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/webhooks\">\n                  {translate('webhooks.page')}\n                </IndexLink>\n              </li>\n            )}\n            {extensionsWithoutSupport.map(this.renderExtension)}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', {\n              active:\n                open ||\n                (!this.isSecurityActive() &&\n                  !this.isProjectsActive() &&\n                  !this.isSystemActive() &&\n                  !this.isSomethingActive(['/admin/extension/license/support']) &&\n                  !this.isMarketplace())\n            })}\n            href=\"#\"\n            id=\"settings-navigation-configuration\"\n            onClick={onToggleClick}>\n            {translate('sidebar.project_settings')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  renderProjectsTab() {\n    const { organizationsEnabled } = this.props;\n    return (\n      <Dropdown\n        overlay={\n          <ul className=\"menu\">\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/projects_management\">\n                  {translate('management')}\n                </IndexLink>\n              </li>\n            )}\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/background_tasks\">\n                {translate('background_tasks.page')}\n              </IndexLink>\n            </li>\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: open || this.isProjectsActive() })}\n            href=\"#\"\n            onClick={onToggleClick}>\n            {translate('sidebar.projects')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  renderSecurityTab() {\n    const { organizationsEnabled } = this.props;\n    return (\n      <Dropdown\n        overlay={\n          <ul className=\"menu\">\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/users\">\n                {translate('users.page')}\n              </IndexLink>\n            </li>\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/groups\">\n                  {translate('user_groups.page')}\n                </IndexLink>\n              </li>\n            )}\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/permissions\">\n                  {translate('global_permissions.page')}\n                </IndexLink>\n              </li>\n            )}\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/permission_templates\">\n                  {translate('permission_templates')}\n                </IndexLink>\n              </li>\n            )}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: open || this.isSecurityActive() })}\n            href=\"#\"\n            onClick={onToggleClick}>\n            {translate('sidebar.security')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  render() {\n    const { extensions, pendingPlugins } = this.props;\n    const hasSupportExtension = extensions.find(extension => extension.key === 'license/support');\n    const totalPendingPlugins =\n      pendingPlugins.installing.length +\n      pendingPlugins.removing.length +\n      pendingPlugins.updating.length;\n\n    let notifComponent;\n    if (this.props.systemStatus === 'RESTARTING') {\n      notifComponent = <SystemRestartNotif />;\n    } else if (totalPendingPlugins > 0) {\n      notifComponent = (\n        <PendingPluginsActionNotif\n          fetchSystemStatus={this.props.fetchSystemStatus}\n          pending={pendingPlugins}\n          refreshPending={this.props.fetchPendingPlugins}\n          systemStatus={this.props.systemStatus}\n        />\n      );\n    }\n\n    return (\n      <ContextNavBar\n        height={notifComponent ? theme.contextNavHeightRaw + 30 : theme.contextNavHeightRaw}\n        id=\"context-navigation\"\n        notif={notifComponent}>\n        <header className=\"navbar-context-header\">\n          <h1>{translate('layout.settings')}</h1>\n        </header>\n\n        <NavBarTabs>\n          {this.renderConfigurationTab()}\n          {this.renderSecurityTab()}\n          {this.renderProjectsTab()}\n\n          <li>\n            <IndexLink activeClassName=\"active\" to=\"/admin/system\">\n              {translate('sidebar.system')}\n            </IndexLink>\n          </li>\n\n          <li>\n            <IndexLink activeClassName=\"active\" to=\"/admin/marketplace\">\n              {translate('marketplace.page')}\n            </IndexLink>\n          </li>\n\n          {hasSupportExtension && (\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/extension/license/support\">\n                {translate('support')}\n              </IndexLink>\n            </li>\n          )}\n        </NavBarTabs>\n      </ContextNavBar>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport AdminContext, { defaultPendingPlugins, defaultSystemStatus } from './AdminContext';\nimport SettingsNav from './nav/settings/SettingsNav';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getSettingsNavigation } from '../../api/nav';\nimport { setAdminPages } from '../../store/appState';\nimport { translate } from '../../helpers/l10n';\nimport { PluginPendingResult, getPendingPlugins } from '../../api/plugins';\nimport handleRequiredAuthorization from '../utils/handleRequiredAuthorization';\nimport { getSystemStatus, waitSystemUPStatus } from '../../api/system';\n\ninterface Props {\n  appState: Pick<T.AppState, 'adminPages' | 'canAdmin' | 'organizationsEnabled'>;\n  location: {};\n  setAdminPages: (adminPages: T.Extension[]) => void;\n}\n\ninterface State {\n  pendingPlugins: PluginPendingResult;\n  systemStatus: T.SysStatus;\n}\n\nexport class AdminContainer extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    pendingPlugins: defaultPendingPlugins,\n    systemStatus: defaultSystemStatus\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (!this.props.appState.canAdmin) {\n      handleRequiredAuthorization();\n    } else {\n      this.fetchNavigationSettings();\n      this.fetchPendingPlugins();\n      this.fetchSystemStatus();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNavigationSettings = () => {\n    getSettingsNavigation().then(r => this.props.setAdminPages(r.extensions), () => {});\n  };\n\n  fetchPendingPlugins = () => {\n    getPendingPlugins().then(\n      pendingPlugins => {\n        if (this.mounted) {\n          this.setState({ pendingPlugins });\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchSystemStatus = () => {\n    getSystemStatus().then(\n      ({ status }) => {\n        if (this.mounted) {\n          this.setState({ systemStatus: status });\n          if (status === 'RESTARTING') {\n            this.waitRestartingDone();\n          }\n        }\n      },\n      () => {}\n    );\n  };\n\n  waitRestartingDone = () => {\n    waitSystemUPStatus().then(\n      ({ status }) => {\n        if (this.mounted) {\n          this.setState({ systemStatus: status });\n          document.location.reload();\n        }\n      },\n      () => {}\n    );\n  };\n\n  render() {\n    const { adminPages, organizationsEnabled } = this.props.appState;\n\n    // Check that the adminPages are loaded\n    if (!adminPages) {\n      return null;\n    }\n\n    const { pendingPlugins, systemStatus } = this.state;\n    const defaultTitle = translate('layout.settings');\n\n    return (\n      <div>\n        <Helmet defaultTitle={defaultTitle} titleTemplate={'%s - ' + defaultTitle} />\n        <SettingsNav\n          extensions={adminPages}\n          fetchPendingPlugins={this.fetchPendingPlugins}\n          fetchSystemStatus={this.fetchSystemStatus}\n          location={this.props.location}\n          organizationsEnabled={organizationsEnabled}\n          pendingPlugins={pendingPlugins}\n          systemStatus={systemStatus}\n        />\n        <AdminContext.Provider\n          value={{\n            fetchSystemStatus: this.fetchSystemStatus,\n            fetchPendingPlugins: this.fetchPendingPlugins,\n            pendingPlugins,\n            systemStatus\n          }}>\n          {this.props.children}\n        </AdminContext.Provider>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({ appState: getAppState(state) });\n\nconst mapDispatchToProps = { setAdminPages };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminContainer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n          {headerDescription}\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, requestTryAndRepeatUntil } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<T.SysInfoCluster | T.SysInfoStandalone> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: T.SysStatus }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: T.SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nexport function waitSystemUPStatus(): Promise<{\n  id: string;\n  version: string;\n  status: T.SysStatus;\n}> {\n  return requestTryAndRepeatUntil(\n    getSystemStatus,\n    { max: -1, slowThreshold: -15 },\n    ({ status }) => status === 'UP'\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getGlobalNavigation(): Promise<T.AppState> {\n  return getJSON('/api/navigation/global');\n}\n\nexport function getComponentNavigation(\n  data: { component: string } & T.BranchParameters\n): Promise<any> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getStore from './getStore';\nimport getHistory from './getHistory';\nimport { requireAuthorization } from '../../store/appState';\n\nexport default function handleRequiredAuthorization() {\n  const store = getStore();\n  const history = getHistory();\n\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n\n  store.dispatch(requireAuthorization());\n  history.replace({ pathname: '/sessions/new', query: { return_to: returnTo } });\n}\n"],"sourceRoot":""}