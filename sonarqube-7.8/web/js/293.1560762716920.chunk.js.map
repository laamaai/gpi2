{"version":3,"sources":["webpack:///./src/main/js/app/components/AdminContext.tsx","webpack:///./src/main/js/components/common/RestartButton.tsx","webpack:///./src/main/js/components/controls/BoxedGroupAccordion.tsx","webpack:///./src/main/js/components/common/StatusIndicator.css?1954","webpack:///./src/main/js/components/common/StatusIndicator.css","webpack:///./src/main/js/apps/system/styles.css?d742","webpack:///./src/main/js/apps/system/styles.css","webpack:///./src/main/js/apps/system/components/info-items/HealthCauseItem.tsx","webpack:///./src/main/js/components/common/StatusIndicator.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthItem.tsx","webpack:///./src/main/js/apps/system/utils.ts","webpack:///./src/main/js/apps/system/components/info-items/SysInfoItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/Section.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthCard.tsx","webpack:///./src/main/js/apps/system/components/ClusterSysInfos.tsx","webpack:///./src/main/js/apps/system/components/ChangeLogLevelForm.tsx","webpack:///./src/main/js/apps/system/components/PageActions.tsx","webpack:///./src/main/js/apps/system/components/PageHeader.tsx","webpack:///./src/main/js/apps/system/components/StandaloneSysInfos.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeIntermediate.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeItem.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeForm.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeNotif.tsx","webpack:///./src/main/js/apps/system/components/App.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/components/controls/ClipboardButton.tsx","webpack:///./src/main/js/components/icons-components/ChevronDownIcon.tsx","webpack:///./src/main/js/components/icons-components/OpenCloseIcon.tsx","webpack:///./src/main/js/api/system.ts"],"names":["__webpack_require__","d","__webpack_exports__","defaultPendingPlugins","defaultSystemStatus","react__WEBPACK_IMPORTED_MODULE_0__","installing","removing","updating","AdminContext","fetchSystemStatus","fetchPendingPlugins","pendingPlugins","systemStatus","RestartButton","_super","_this","apply","this","arguments","handleConfirm","Object","_api_system__WEBPACK_IMPORTED_MODULE_4__","then","props","__extends","prototype","render","_a","className","_controls_ConfirmButton__WEBPACK_IMPORTED_MODULE_2__","confirmButtonText","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","modalBody","modalHeader","onConfirm","onClick","_ui_buttons__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_1__","disabled","BoxedGroupAccordion","state","hoveringInner","handleClick","data","onDetailEnter","setState","onDetailLeave","open","renderHeader","title","no-hover","role","_icons_components_OpenCloseIcon__WEBPACK_IMPORTED_MODULE_2__","onMouseEnter","onMouseLeave","children","content","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","HealthCauseItem","health","healthCause","index_js_exposed","Alert","classnames","display","variant","StatusIndicator_StatusIndicator","color","size","small-status-indicator","big-status-indicator","HealthItem","biggerHealth","name","healthCauses","hasHealthCauses","length","statusIndicator","toLowerCase","map","cause","idx","key","Tooltip","overlay","l10n","LOGS_LEVELS","DEFAULT_LOG_LEVEL","APP_NODES_FIELD","CE_FIELD_PREFIX","CE_LOGGING_FIELD","HA_FIELD","HEALTH_CAUSES_FIELD","HEALTH_FIELD","LOGS_LEVEL_FIELD","NAME_FIELD","NCLOC_FIELD","PLUGINS_FIELD","SEARCH_NODES_FIELD","SEARCH_PREFIX","SERVER_ID_FIELD","SETTINGS_FIELD","STATE_FIELD","STATS_FIELD","SYSTEM_FIELD","VERSION_FIELD","WEB_LOGGING_FIELD","WEB_PREFIX","ignoreInfoFields","sysInfoObject","omit_default","getHealth","getHealthCauses","getLogsLevel","isLogInfoBlock","Boolean","hasLoggingInfo","sortBy_default","logLevel","indexOf","getAppNodes","sysInfoData","utils_isCluster","getServerId","getVersion","getClusterVersion","appNodes","getSystemLogsLevel","logLevels","getNodeName","nodeInfo","getSystemData","statData","statistics","measures","__assign","getClusterMainCardSection","getStandaloneMainSections","omitBy_default","value","includes","startsWith","parseQuery","memoize_default","urlQuery","expandedCards","helpers_query","expand","serializeQuery","query","sortUpgrades","upgrades","upgrade","Number","version","split","groupUpgrades","groupedVersions","groupBy_default","keys","SysInfoItem","Array","JSON","stringify","SysInfoItem_typeof","BooleanItem","ObjectItem","AlertSuccessIcon","AlertErrorIcon","map_default","Section","items","id","style","wordBreak","HealthCard","_b","mainSection","sections","each_default","item","_typeof","groupSections","showFields","showSections","showLogLevelWarning","section","ClusterSysInfos","toggleCard","node","getSearchNodes","ChangeLogLevelForm","call","handleFormSubmit","event","preventDefault","newLevel","system","onChange","handleLevelChange","currentTarget","header","Modal","contentLabel","onRequestClose","onClose","onSubmit","level","checked","type","htmlFor","infoMsg","buttons","PageActions","handleLogsLevelOpen","openLogsLevelForm","handleLogsLevelChange","onLogLevelChange","handleLogsLevelClose","removeElementFocus","blur","PageActions_extends","componentWillReceiveProps","nextProps","suffix","now","infoUrl","urls","logsUrl","canDownloadLogs","Dropdown","download","href","rel","target","DropdownIcon","serverId","Date","getFullYear","getMonth","getDate","getHours","getMinutes","canRestart","Consumer","components_ChangeLogLevelForm","cluster","PageHeader","isCluster","loading","showActions","components_PageActions","ClipboardButton","copyValue","dates","label","StandAloneSysInfos","Web","pickBy_default","_","Compute Engine","Search Engine","getStandaloneSecondarySections","SystemUpgradeIntermediate","showMore","toggleIntermediatVersions","SystemUpgradeIntermediate_extends","turned","DateFormatter","date","releaseDate","long","formattedDate","changeLogUrl","description","SystemUpgradeItem","systemUpgrades","lastUpgrade","index_es","defaultMessage","values","system_upgrade_SystemUpgradeIntermediate","slice","downloadUrl","SystemUpgradeForm","upgrading","SystemUpgradeForm_extends","SystemUpgradeNotif","mounted","openSystemUpgradeForm","fetchSystemUpgrade","handleOpenSystemUpgradeForm","handleCloseSystemUpgradeForm","SystemUpgradeNotif_extends","componentDidMount","componentWillUnmount","system_upgrade_SystemUpgradeForm","App_App","App","fetchSysInfo","toggleSysInfoCards","toggledCard","location","filter","card","concat","updateQuery","newQuery","App_assign","router","replace","pathname","App_extends","renderSysInfo","Suggestions","suggestions","Helmet_default","a","system_upgrade_SystemUpgradeNotif","es","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-small","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","addSuggestions","removeSuggestions","SuggestionsInner","componentDidUpdate","prevProps","SimpleModal","submitting","stopSubmitting","handleCloseClick","submit","handleSubmitClick","result","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","onCloseClick","onFormSubmit","onSubmitClick","formatterOption","year","month","day","longFormatterOption","react_intl__WEBPACK_IMPORTED_MODULE_1__","_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","ConfirmModal","handleSubmit","confirmData","renderModalContent","confirmDisable","headerDescription","isDestructive","_c","cancelButtonText","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","autoFocus","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","ConfirmButton","renderConfirmModal","modalHeaderDescription","confirmModalProps","_ConfirmModal__WEBPACK_IMPORTED_MODULE_1__","_ModalButton__WEBPACK_IMPORTED_MODULE_2__","modal","ModalButton","handleButtonClick","handleCloseModal","tooltipShown","showTooltip","setTimeout","copyButton","clipboard","clipboard__WEBPACK_IMPORTED_MODULE_2__","on","destroy","_Tooltip__WEBPACK_IMPORTED_MODULE_3__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","visible","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","data-clipboard-text","innerRef","ChevronDownIcon","_Icon__WEBPACK_IMPORTED_MODULE_1__","fill","OpenCloseIcon","_ChevronDownIcon__WEBPACK_IMPORTED_MODULE_1__","_ChevronRightcon__WEBPACK_IMPORTED_MODULE_2__","setLogLevel","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","restart","waitSystemUPStatus","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","catch","max","slowThreshold","status"],"mappings":"6FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,KA6BaG,EAAwB,CAAEG,WAAY,GAAIC,SAAU,GAAIC,SAAU,IAClEJ,EAAsB,KAE7BK,EAAeJ,EAAA,cAA2C,CAC9DK,kBAAmB,aACnBC,oBAAqB,aACrBC,eAAgBT,EAChBU,aAAcT,IAEDF,EAAA,sZCNfY,EAAA,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAAI,cAAgB,WACd,OAAOC,OAAAC,EAAA,EAAAD,GAAUE,KAAKP,EAAKQ,MAAMd,sBA+BrC,OAjC2Ce,EAAAX,EAAAC,GAKzCD,EAAAY,UAAAC,OAAA,WACQ,IAAAC,EAAAV,KAAAM,MAAEK,EAAAD,EAAAC,UAAWhB,EAAAe,EAAAf,aACnB,OACER,EAAA,cAACyB,EAAA,EAAa,CACZC,kBAAmBV,OAAAW,EAAA,EAAAX,CAAU,WAC7BY,UACE5B,EAAA,cAAAA,EAAA,cACEA,EAAA,mBAAGwB,UAAU,4BACVR,OAAAW,EAAA,EAAAX,CAAU,mCAEbhB,EAAA,uBAAIgB,OAAAW,EAAA,EAAAX,CAAU,6CAGlBa,YAAab,OAAAW,EAAA,EAAAX,CAAU,yBACvBc,UAAWjB,KAAKE,eACf,SAACQ,OAAEQ,EAAAR,EAAAQ,QAAc,OAChB/B,EAAA,cAACgC,EAAA,EAAM,CACLR,UAAWS,EAAW,aAAcT,GACpCU,SAA2B,OAAjB1B,EACVuB,QAASA,GACS,eAAjBvB,EACGQ,OAAAW,EAAA,EAAAX,CAAU,8BACVA,OAAAW,EAAA,EAAAX,CAAU,6BAM1BP,EAjCA,CAA2CT,EAAA,6YCK3CmC,EAAA,SAAAzB,GAAA,SAAAyB,IAAA,IAAAxB,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAAyB,MAAe,CAAEC,eAAe,GAEhC1B,EAAA2B,YAAc,WACZ3B,EAAKQ,MAAMY,QAAQpB,EAAKQ,MAAMoB,OAGhC5B,EAAA6B,cAAgB,WACd7B,EAAK8B,SAAS,CAAEJ,eAAe,KAGjC1B,EAAA+B,cAAgB,WACd/B,EAAK8B,SAAS,CAAEJ,eAAe,OA4BnC,OAxCiDjB,EAAAe,EAAAzB,GAe/CyB,EAAAd,UAAAC,OAAA,WACQ,IAAAC,EAAAV,KAAAM,MAAEK,EAAAD,EAAAC,UAAWmB,EAAApB,EAAAoB,KAAMC,EAAArB,EAAAqB,aAAcC,EAAAtB,EAAAsB,MACvC,OACE7C,EAAA,qBACEwB,UAAWS,EAAW,oCAAqCT,EAAW,CACpEsB,WAAYjC,KAAKuB,MAAMC,iBAEzBrC,EAAA,qBAAKwB,UAAU,qBAAqBO,QAASlB,KAAKyB,YAAaS,KAAK,YAClE/C,EAAA,sBAAMwB,UAAU,+BACdxB,EAAA,cAACgD,EAAA,EAAa,CAACxB,UAAU,sBAAsBmB,KAAMA,IACpDE,GAEFD,GAAgBA,KAElBD,GACC3C,EAAA,qBACEwB,UAAU,oBACVyB,aAAcpC,KAAK2B,cACnBU,aAAcrC,KAAK6B,eAClB7B,KAAKM,MAAMgC,YAMxBhB,EAxCA,CAAiDnC,EAAA,2CCpCjD,IAAAoD,EAAczD,EAAQ,MAEtB,iBAAAyD,MAAA,EAA4CC,EAAAC,EAASF,EAAA,MAOrD,IAAAG,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEahE,EAAQ,IAARA,CAAoEyD,EAAAG,GAEjFH,EAAAQ,SAAAP,EAAAQ,QAAAT,EAAAQ,+BCjBAP,EAAAQ,QAA2BlE,EAAQ,IAARA,EAAoE,IAE/FmE,KAAA,CAAcT,EAAAC,EAAS,osBAAssB,2BCD7tB,IAAAF,EAAczD,EAAQ,MAEtB,iBAAAyD,MAAA,EAA4CC,EAAAC,EAASF,EAAA,MAOrD,IAAAG,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEahE,EAAQ,IAARA,CAAoEyD,EAAAG,GAEjFH,EAAAQ,SAAAP,EAAAQ,QAAAT,EAAAQ,+BCjBAP,EAAAQ,QAA2BlE,EAAQ,IAARA,EAAoE,IAE/FmE,KAAA,CAAcT,EAAAC,EAAS,opBAAopB,6IC2B7pB,SAAUS,EAAgBxC,OAAEC,EAAAD,EAAAC,UAAWwC,EAAAzC,EAAAyC,OAAQC,EAAA1C,EAAA0C,YAC3D,OACEC,EAAA,cAACC,EAAA,EAAK,CACJ3C,UAAW4C,EAAW,8BAA+B5C,GACrD6C,QAAQ,SACRC,QAAoB,QAAXN,EAAmB,QAAU,WACrCC,WCNO,SAAUM,EAAgBhD,OAAEC,EAAAD,EAAAC,UAAWgD,EAAAjD,EAAAiD,MAAOC,EAAAlD,EAAAkD,KAC1D,OACEP,EAAA,mBACE1C,UAAW4C,EACT,mBACAI,EACA,CACEE,yBAAmC,UAATD,EAC1BE,uBAAiC,QAATF,GAE1BjD,0BCLM,SAAUoD,EAAWrD,OAAEsD,EAAAtD,EAAAsD,aAAcrD,EAAAD,EAAAC,UAAWsD,EAAAvD,EAAAuD,KAAMd,EAAAzC,EAAAyC,OAAQe,EAAAxD,EAAAwD,aACpEC,EAAkBD,GAAgBA,EAAaE,OAAS,GAAgB,UAAXjB,EAC7DkB,EACJhB,EAAA,cAACK,EAAe,CAACC,MAAOR,EAAOmB,cAAeV,KAAMI,EAAe,WAAQlB,IAE7E,OACEO,EAAA,qBAAK1C,UAAW4C,EAAW,0BAA2B5C,IACnDwD,GACCD,EAAcK,IAAI,SAACC,EAAOC,GAAQ,OAChCpB,EAAA,cAACH,EAAe,CAACvC,UAAU,eAAewC,OAAQA,EAAQC,YAAaoB,EAAOE,IAD9CD,MAGnCR,EACCZ,EAAA,cAACsB,EAAA,EAAO,CAACC,QAASzE,OAAA0E,EAAA,EAAA1E,CAAwB,6BAA8B8D,IACtEZ,EAAA,0BAAOgB,IAGTA,glBCjBKS,EAAc,CAAC,OAAQ,QAAS,SACvCC,EAAoBD,EAAY,GAEzBE,EAAkB,oBAClBC,EAAkB,iBAClBC,EAAmB,yBACnBC,EAAW,oBACXC,EAAsB,gBACtBC,EAAe,SACfC,EAAmB,aACnBC,EAAa,OACbC,EAAc,QACdC,EAAgB,UAChBC,EAAqB,eACrBC,EAAgB,SAChBC,EAAkB,YAClBC,EAAiB,WACjBC,EAAc,QACdC,EAAc,aACdC,GAAe,SACfC,GAAgB,UAChBC,GAAoB,cACpBC,GAAa,MAEpB,SAAUC,GAAiBC,GAC/B,OAAOC,IAAKD,EAAe,CACzBhB,EACAD,EACAG,EACAE,EACAI,EACAD,EACAK,KAIE,SAAUM,GAAUF,GACxB,OAAOA,EAAchB,GAGjB,SAAUmB,GAAgBH,GAC9B,OAAOA,EAAcjB,GAGjB,SAAUqB,GAAaJ,GAC3B,QAAsBvD,IAAlBuD,EAA6B,CAC/B,GA6BE,SACJA,GAEA,YAA2CvD,IAApCuD,EAAcf,GAhCfoB,CAAeL,GACjB,OAAOA,EAAcf,GAChB,GAiCL,SACJe,GAEA,OAAOM,QAAQN,EAAcH,KAAsBG,EAAcnB,IApCpD0B,CAAeP,GACxB,OAAOQ,IACL,CACEJ,GAAaJ,EAAcH,KAC3BO,GAAaJ,EAAcnB,KAE7B,SAAA4B,GAAY,OAAAhC,EAAYiC,QAAZD,KACZ,GAGN,OAAO/B,EAGH,SAAUiC,GAAYC,GAC1B,OAAOA,EAAYjC,GAOf,SAAUkC,GACdD,GAEA,OAAOA,EAAYjB,MAAyD,IAAxCiB,EAAYjB,IAAcb,GAe1D,SAAUgC,GAAYF,GAC1B,OAAOA,GAAeA,EAAYjB,IAAcJ,GAG5C,SAAUwB,GAAWH,GACzB,OAAOA,GAAeA,EAAYjB,IAAcC,IAG5C,SAAUoB,GAAkBJ,GAChC,IAAMK,EAAWN,GAAYC,GAC7B,OAAOK,EAASlD,OAAS,EAAIkD,EAAS,GAAGtB,IAAcC,SAAiBnD,EAGpE,SAAUyE,GAAmBN,GACjC,GAAIC,GAAUD,GAAc,CAC1B,IAAMO,EAAYX,IAAOG,GAAYC,GAAa1C,IAAIkC,IAAe,SAAAK,GACnE,OAAAhC,EAAYiC,QAAQD,KAEtB,OAAOU,EAAUpD,OAAS,EAAIoD,EAAUA,EAAUpD,OAAS,GAAKW,EAEhE,OAAO0B,GAAaQ,GAIlB,SAAUQ,GAAYC,GAC1B,OAAOA,EAASnC,GAGlB,SAASoC,GAAcV,GACrB,IAAMW,EAAiC,GACjCC,EAAaZ,EAAYlB,GAI/B,OAHI8B,IACFD,EAAS,iBAAmBzH,OAAA2H,EAAA,cAAA3H,CAAc0H,EAAWrC,GAAwB,QAE/EuC,EAAA,GAAYd,EAAYjB,IAAkB4B,GAGtC,SAAUI,GAA0Bf,GACxC,OAAAc,EAAA,GACKJ,GAAcV,GACdX,IAAKW,EAAa,CACnBjC,EACAS,EACAC,EACAG,EACAE,EACAC,MAKA,SAAUiC,GAA0BhB,GACxC,OAAAc,EAAA,GACKJ,GAAcV,GACbiB,IACFjB,EACA,SAACkB,EAAOzD,GACN,OAAS,MAATyD,GACA,CAAC1C,EAAeI,EAAgBE,EAAaC,IAAcoC,SAAS1D,IACpEA,EAAI2D,WAAWpD,IACfP,EAAI2D,WAAW1C,IACfjB,EAAI2D,WAAWlC,OAuChB,IAAMmC,GAAaC,IACxB,SAACC,GAA8B,MAAC,CAC9BC,cAAetI,OAAAuI,EAAA,EAAAvI,CAAaqI,EAASG,OAAQD,EAAA,MAIpCE,GAAiBL,IAC5B,SAACM,GACC,OAAA1I,OAAAuI,EAAA,EAAAvI,CAAW,CACTwI,OAAQxI,OAAAuI,EAAA,EAAAvI,CAAqB0I,EAAMJ,mBAInC,SAAUK,GAAaC,GAC3B,OAAOlC,IAAOkC,EAAU,CACtB,SAACC,GAA6B,OAACC,OAAOD,EAAQE,QAAQC,MAAM,KAA9B,KAC9B,SAACH,GAA6B,OAACC,OAAOD,EAAQE,QAAQC,MAAM,KAAK,IAAnC,IAC9B,SAACH,GAA6B,OAACC,OAAOD,EAAQE,QAAQC,MAAM,KAAK,IAAnC,MAI5B,SAAUC,GAAcL,GAC5B,IAAMM,EAAkBC,IAAQP,EAAU,SAAAC,GAAW,OAAAA,EAAQE,QAAQC,MAAM,KAAtB,KAErD,OADoBtC,IAAO1G,OAAOoJ,KAAKF,GAAkB,SAAA3E,GAAO,OAACuE,OAADvE,KAC7CH,IAAI,SAAAG,GAAO,OAAA2E,EAAA3E,4OCrNlB,SAAU8E,GAAY9I,OAAEuD,EAAAvD,EAAAuD,KAAMkE,EAAAzH,EAAAyH,MAC1C,GAAIlE,IAASoB,GAAgBpB,IAAS6B,EACpC,OAAOzC,EAAA,cAACU,EAAU,CAACpD,UAAU,YAAYwC,OAAQgF,IAEnD,GAAIA,aAAiBsB,MACnB,OAAOpG,EAAA,0BAAOqG,KAAKC,UAAUxB,IAE/B,OAAAyB,GAAezB,IACb,IAAK,UACH,OAAO9E,EAAA,cAACwG,GAAW,CAAC1B,MAAOA,IAC7B,IAAK,SACH,OAAO9E,EAAA,cAACyG,GAAU,CAAC3B,MAAOA,IAC5B,QACE,OAAO9E,EAAA,0BAAO8E,IAIpB,SAAS0B,GAAYnJ,GACnB,OADqBA,EAAAyH,MAEZ9E,EAAA,cAAC0G,EAAA,EAAgB,MAEjB1G,EAAA,cAAC2G,EAAA,EAAc,MAI1B,SAASF,GAAWpJ,OAAEyH,EAAAzH,EAAAyH,MACpB,OACE9E,EAAA,uBAAO1C,UAAU,QACf0C,EAAA,2BACG4G,IAAI9B,EAAO,SAACA,EAAOlE,GAAS,OAC3BZ,EAAA,oBAAIqB,IAAKT,GACPZ,EAAA,oBAAI1C,UAAU,eAAesD,GAC7BZ,EAAA,wBACEA,EAAA,cAACmG,GAAW,CAACvF,KAAMA,EAAMkE,MAJFA,UChCvB,SAAU+B,GAAQxJ,OAAEuD,EAAAvD,EAAAuD,KAAMkG,EAAAzJ,EAAAyJ,MACtC,OACE9G,EAAA,qBAAK1C,UAAU,uBACZsD,GAAQZ,EAAA,oBAAI1C,UAAU,iBAAiBsD,GACxCZ,EAAA,uBAAO1C,UAAU,aAAayJ,GAAInG,GAChCZ,EAAA,2BACG4G,IAAIE,EAAO,SAAChC,EAAOlE,GAClB,OACEZ,EAAA,oBAAIqB,IAAKT,GACPZ,EAAA,oBAAI1C,UAAU,QACZ0C,EAAA,qBAAK1C,UAAU,iCAAiCsD,IAElDZ,EAAA,oBAAIgH,MAAO,CAAEC,UAAW,cACtBjH,EAAA,cAACmG,GAAW,CAACvF,KAAMA,EAAMkE,MAAOA,0BCHpC,SAAUoC,GAAW7J,OACjCsD,EAAAtD,EAAAsD,aACAb,EAAAzC,EAAAyC,OACAe,EAAAxD,EAAAwD,aACAhD,EAAAR,EAAAQ,QACAY,EAAApB,EAAAoB,KACAmC,EAAAvD,EAAAuD,KACAgD,EAAAvG,EAAAuG,YAEMuD,EHgKF,SAAwBvD,GAC5B,IAAMwD,EAAoC,GACpCC,EAA6B,GAQnC,OAPAC,IAAK1D,EAAa,SAAC2D,EAAMlG,GACH,WAAhBmG,EAAOD,IAAqBA,aAAgBnB,MAC9CgB,EAAY/F,GAAOkG,EAEnBF,EAAShG,GAAOkG,IAGb,CAAEH,YAAWA,EAAEC,SAAQA,GG1KxBI,CAAA7D,GAAEwD,EAAAD,EAAAC,YAAaC,EAAAF,EAAAE,SACfK,EAAajJ,GAAQ2I,GAAetK,OAAOoJ,KAAKkB,GAAarG,OAAS,EACtE4G,EAAelJ,GAAQ4I,EACvB5D,EAAWL,GAAaQ,GACxBgE,EAAsBnE,GAAYA,IAAahC,EAAY,GACjE,OACEzB,EAAA,cAAC/B,GAAA,EAAmB,CAClBI,KAAMuC,EACN/C,QAASA,EACTY,KAAMA,EACNC,aAAc,WAAM,OAClBsB,EAAA,cAAAA,EAAA,cACG4H,GACC5H,EAAA,cAACC,EAAA,EAAK,CACJ3C,UAAU,0CACV6C,QAAQ,SACRC,QAAQ,WACPtD,OAAA0E,EAAA,EAAA1E,CAAU,mCAGdgD,GACCE,EAAA,cAACU,EAAU,CACTC,aAAcA,EACdrD,UAAU,aACVwC,OAAQA,EACRe,aAAcA,EACdD,KAhBYA,MAqBpBjC,MAAOiC,GACN8G,GAAc1H,EAAA,cAAC6G,GAAO,CAACC,MAAOM,IAC9BO,GACCf,IAAIS,EAAU,SAACQ,EAASjH,GAAS,OAAAZ,EAAA,cAAC6G,GAAO,CAACC,MAAOe,EAASxG,IAAKT,EAAMA,KAApCA,OC1C3B,SAAUkH,GAAgBzK,OAAE+H,EAAA/H,EAAA+H,cAAexB,EAAAvG,EAAAuG,YAAamE,EAAA1K,EAAA0K,WAEpE,OACE/H,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACkH,GAAU,CACTvG,cAAc,EACdb,OAAQoD,GAAUU,GAClB/C,aAAcsC,GAAgBS,GAC9BhD,KAPe,SAQf/C,QAASkK,EACTtJ,KAAM2G,EAAcL,SATL,UAUfnB,YAAab,GAAiB4B,GAA0Bf,MAE1D5D,EAAA,oBAAI1C,UAAU,iCACXR,OAAA0E,EAAA,EAAA1E,CAAU,mCAEZ0G,IAAOG,GAAYC,GAAcQ,IAAalD,IAAI,SAAC8G,GAA2B,OAC7EhI,EAAA,cAACkH,GAAU,CACTpH,OAAQoD,GAAU8E,GAClBnH,aAAcsC,GAAgB6E,GAC9B3G,IAAK+C,GAAY4D,GACjBpH,KAAMwD,GAAY4D,GAClBnK,QAASkK,EACTtJ,KAAM2G,EAAcL,SAASX,GAAY4D,IACzCpE,YAAab,GAR8DiF,OAW/EhI,EAAA,oBAAI1C,UAAU,iCAAiCR,OAAA0E,EAAA,EAAA1E,CAAU,8BACxD0G,IJ+BD,SAAyBI,GAC7B,OAAOA,EAAYvB,GIhCP4F,CAAerE,GAAcQ,IAAalD,IAAI,SAAC8G,GAA8B,OACnFhI,EAAA,cAACkH,GAAU,CACT7F,IAAK+C,GAAY4D,GACjBpH,KAAMwD,GAAY4D,GAClBnK,QAASkK,EACTtJ,KAAM2G,EAAcL,SAASX,GAAY4D,IACzCpE,YAAab,GANoEiF,wWC5B3F,SAAAxL,GACE,SAAA0L,EAAYjL,GAAZ,IAAAR,EACED,EAAA2L,KAAAxL,KAAMM,IAAMN,YAIdF,EAAA2L,iBAAmB,SAACC,GAClBA,EAAMC,iBACE,IAAAC,EAAA9L,EAAAyB,MAAAqK,SACH9L,EAAKyB,MAAMjC,WACdQ,EAAK8B,SAAS,CAAEtC,UAAU,IAC1Ba,OAAA0L,GAAA,EAAA1L,CAAYyL,GAAUvL,KACpB,WAAM,OAAAP,EAAKQ,MAAMwL,SAAXF,IACN,WAAM,OAAA9L,EAAK8B,SAAS,CAAEtC,UAAhB,QAKZQ,EAAAiM,kBAAoB,SAACL,GACnB,OAAA5L,EAAK8B,SAAS,CAAEgK,SAAUF,EAAMM,cAAc7D,SAhB9CrI,EAAKyB,MAAQ,CAAEqK,SAAUtL,EAAMwG,SAAUxH,UAAU,KAkEvD,OArEgDiB,GAAAgL,EAAA1L,GAqB9C0L,EAAA/K,UAAAC,OAAA,eAAAX,EAAAE,KACQU,EAAAV,KAAAuB,MAAEjC,EAAAoB,EAAApB,SAAUsM,EAAAlL,EAAAkL,SACZK,EAAS9L,OAAA0E,EAAA,EAAA1E,CAAU,wBACzB,OACEkD,EAAA,cAAC6I,GAAA,EAAK,CAACC,aAAcF,EAAQG,eAAgBpM,KAAKM,MAAM+L,SACtDhJ,EAAA,sBAAM+G,GAAG,qBAAqBkC,SAAUtM,KAAKyL,kBAC3CpI,EAAA,qBAAK1C,UAAU,cACb0C,EAAA,wBAAK4I,IAEP5I,EAAA,qBAAK1C,UAAU,cACZmE,EAAYP,IAAI,SAAAgI,GAAS,OACxBlJ,EAAA,mBAAG1C,UAAU,gBAAgB+D,IAAK6H,GAChClJ,EAAA,uBACEmJ,QAASD,IAAUX,EACnBjL,UAAU,2BACVyJ,GAAI,YAAYmC,EAChBtI,KAAK,oBACL6H,SAAUhM,EAAKiM,kBACfU,KAAK,QACLtE,MAAOoE,IAETlJ,EAAA,uBAAO1C,UAAU,cAAc+L,QAAS,YAAYH,GAX9BA,MAgB1BlJ,EAAA,cAACC,EAAA,EAAK,CAAC3C,UAAU,aAAa8C,QAAQ,QACnCzD,KAAKM,MAAMqM,SAEA,SAAbf,GACCvI,EAAA,cAACC,EAAA,EAAK,CAAC3C,UAAU,aAAa8C,QAAQ,WACnCtD,OAAA0E,EAAA,EAAA1E,CAAU,8BAIjBkD,EAAA,qBAAK1C,UAAU,cACZrB,GAAY+D,EAAA,mBAAG1C,UAAU,yBAC1B0C,EAAA,cAACuJ,GAAA,EAAY,CAACvL,SAAU/B,EAAU8K,GAAG,wBAClCjK,OAAA0E,EAAA,EAAA1E,CAAU,SAEbkD,EAAA,cAACuJ,GAAA,EAAe,CAACxC,GAAG,uBAAuBlJ,QAASlB,KAAKM,MAAM+L,SAC5DlM,OAAA0E,EAAA,EAAA1E,CAAU,eAOzBoL,EArEA,CAAgDlI,EAAA,iZCKhD,SAAAxD,GACE,SAAAgN,EAAYvM,GAAZ,IAAAR,EACED,EAAA2L,KAAAxL,KAAMM,IAAMN,YAadF,EAAAgN,oBAAsB,WACpBhN,EAAK8B,SAAS,CAAEmL,mBAAmB,KAGrCjN,EAAAkN,sBAAwB,SAAClG,GACvBhH,EAAK8B,SAAS,CAAEkF,SAAQA,IACxBhH,EAAKQ,MAAM2M,mBACXnN,EAAKoN,wBAGPpN,EAAAoN,qBAAuB,WACrBpN,EAAK8B,SAAS,CAAEmL,mBAAmB,KAGrCjN,EAAAqN,mBAAqB,SAACzB,GACpBA,EAAMM,cAAcoB,QA3BpBtN,EAAKyB,MAAQ,CACXuF,SAAUxG,EAAMwG,SAChBiG,mBAAmB,KAoIzB,OAzIyCM,GAAAR,EAAAhN,GASvCgN,EAAArM,UAAA8M,0BAAA,SAA0BC,GACpBA,EAAUzG,WAAa9G,KAAKuB,MAAMuF,UACpC9G,KAAK4B,SAAS,CAAEkF,SAAUyG,EAAUzG,YAsBxC+F,EAAArM,UAAAC,OAAA,WACE,INwH8B+M,EAC1BC,EMzHEC,EAAUvN,OAAAwN,GAAA,EAAAxN,GAAe,mBACzByN,EAAUzN,OAAAwN,GAAA,EAAAxN,GAAe,mBAC/B,OACEkD,EAAA,qBAAK1C,UAAU,gBACb0C,EAAA,0BACEA,EAAA,sBAAM1C,UAAU,eACbR,OAAA0E,EAAA,EAAA1E,CAAU,qBACV,IACDkD,EAAA,wBAAQ1C,UAAU,sBAAsBX,KAAKuB,MAAMuF,WAErDzD,EAAA,cAACuJ,GAAA,EAAU,CACTjM,UAAU,2BACVyJ,GAAG,yBACHlJ,QAASlB,KAAK8M,uBAGjB9M,KAAKM,MAAMuN,iBACVxK,EAAA,cAACyK,GAAA,EAAQ,CACPnN,UAAU,mCACViE,QACEvB,EAAA,oBAAI1C,UAAU,QACZ0C,EAAA,wBACEA,EAAA,mBACE0K,SAAS,oBACTC,KAAMJ,EAAU,eAChBxD,GAAG,YACH6D,IAAI,sBACJC,OAAO,UAAQ,iBAInB7K,EAAA,wBACEA,EAAA,mBACE0K,SAAS,mBACTC,KAAMJ,EAAU,cAChBxD,GAAG,eACH6D,IAAI,sBACJC,OAAO,UAAQ,mBAInB7K,EAAA,wBACEA,EAAA,mBACE0K,SAAS,mBACTC,KAAMJ,EAAU,cAChBxD,GAAG,eACH6D,IAAI,sBACJC,OAAO,UAAQ,kBAInB7K,EAAA,wBACEA,EAAA,mBACE0K,SAAS,oBACTC,KAAMJ,EAAU,eAChBxD,GAAG,gBACH6D,IAAI,sBACJC,OAAO,UAAQ,iBAMvB7K,EAAA,cAACuJ,GAAA,EAAM,KACJzM,OAAA0E,EAAA,EAAA1E,CAAU,wBACXkD,EAAA,cAAC8K,GAAA,EAAY,CAACxN,UAAU,yBAI9B0C,EAAA,mBACE1C,UAAU,qBACVoN,SAAU,2BNiDcP,EMjD8BxN,KAAKM,MAAM8N,SNkDnEX,EAAM,IAAIY,MAEXb,EAASA,EAAS,IAAM,IACxBC,EAAIa,cAAa,KAAIb,EAAIc,WAAa,GAAC,IACvCd,EAAIe,UAAS,IAAIf,EAAIgB,WAAU,IAAIhB,EAAIiB,cMtDsC,QAC1EV,KAAMN,EACNtD,GAAG,gBACHlJ,QAASlB,KAAKmN,mBACdc,IAAI,sBACJC,OAAO,UACN/N,OAAA0E,EAAA,EAAA1E,CAAU,gCAEZH,KAAKM,MAAMqO,YACVtL,EAAA,cAAC9D,GAAA,EAAaqP,SAAQ,KACnB,SAAClO,OAAElB,EAAAkB,EAAAlB,kBAAmBG,EAAAe,EAAAf,aAAmB,OACxC0D,EAAA,cAACzD,GAAA,EAAa,CACZe,UAAU,cACVnB,kBAAmBA,EACnBG,aAAcA,MAKrBK,KAAKuB,MAAMwL,mBACV1J,EAAA,cAACwL,GAAkB,CACjBlC,QAASxM,OAAA0E,EAAA,EAAA1E,CACPH,KAAKM,MAAMwO,QAAU,gCAAkC,yBAEzDhI,SAAU9G,KAAKuB,MAAMuF,SACrBgF,SAAU9L,KAAKgN,sBACfX,QAASrM,KAAKkN,yBAM1BL,EAzIA,CAAyCxJ,EAAA,mCCT3B,SAAU0L,GAAWzO,GACzB,IAAA0O,EAAA1O,EAAA0O,UAAWC,EAAA3O,EAAA2O,QAASnI,EAAAxG,EAAAwG,SAAUsH,EAAA9N,EAAA8N,SAAUc,EAAA5O,EAAA4O,YAAahG,EAAA5I,EAAA4I,QAC7D,OACE7F,EAAA,wBAAQ1C,UAAU,eAChB0C,EAAA,oBAAI1C,UAAU,cAAcR,OAAA0E,EAAA,EAAA1E,CAAU,qBACrC+O,GACC7L,EAAA,cAAC8L,GAAW,CACVtB,iBAAkBmB,EAClBL,YAAaK,EACbF,QAASE,EACTlI,SAAUA,EACVmG,iBAAkB3M,EAAM2M,iBACxBmB,SAAUA,IAGba,GACC5L,EAAA,qBAAK1C,UAAU,gBACb0C,EAAA,mBAAG1C,UAAU,aAGhByN,GAAYlF,GACX7F,EAAA,qBAAK1C,UAAU,kEACb0C,EAAA,qBAAK1C,UAAU,UACb0C,EAAA,uBAAO1C,UAAU,aACf0C,EAAA,2BACEA,EAAA,wBACEA,EAAA,wBACEA,EAAA,4BAASlD,OAAA0E,EAAA,EAAA1E,CAAU,sBAErBkD,EAAA,wBAAK+K,IAEP/K,EAAA,wBACEA,EAAA,wBACEA,EAAA,4BAASlD,OAAA0E,EAAA,EAAA1E,CAAU,oBAErBkD,EAAA,wBAAK6F,OAKb7F,EAAA,cAAC+L,GAAA,EAAe,CACdzO,UAAU,SACV0O,UAAW,wCACVjB,EAAQ,cACVlF,EAAO,WACV/I,OAAAmP,GAAA,EAAAnP,CAAsBkO,KAAKZ,OAAM,KAE7B8B,MAAOpP,OAAA0E,EAAA,EAAA1E,CAAU,2BC9Cf,SAAUqP,GAAmB9O,OAAE+H,EAAA/H,EAAA+H,cAAexB,EAAAvG,EAAAuG,YAAamE,EAAA1K,EAAA0K,WAEvE,OACE/H,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACkH,GAAU,CACTvG,cAAc,EACdb,OAAQoD,GAAUU,GAClB/C,aAAcsC,GAAgBS,GAC9BhD,KAPe,SAQf/C,QAASkK,EACTtJ,KAAM2G,EAAcL,SATL,UAUfnB,YAAab,GAAiB6B,GAA0BhB,MAEzDgD,IRyID,SAAyChD,GAC7C,MAAO,CACLwI,IAAKC,IAAOzI,EAAa,SAAC0I,EAAGjL,GAAQ,OAAAA,EAAI2D,WAAJlC,MACrCyJ,iBAAkBF,IAAOzI,EAAa,SAAC0I,EAAGjL,GACxC,OAAAA,EAAI2D,WAAWpD,KAEjB4K,gBAAiBH,IAAOzI,EAAa,SAAC0I,EAAGjL,GACvC,OAAAA,EAAI2D,WAAW1C,MQhJVmK,CAA+B7I,GAAc,SAACiE,EAASjH,GAAS,OACnEZ,EAAA,cAACkH,GAAU,CACT7F,IAAKT,EACLA,KAAMA,EACN/C,QAASkK,EACTtJ,KAAM2G,EAAcL,SAASnE,GAC7BgD,YAAab,GANoD8E,+WCf3E,SAAArL,GAAA,SAAAkQ,IAAA,IAAAjQ,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAAyB,MAAe,CAAEyO,UAAU,GAE3BlQ,EAAAmQ,0BAA4B,WAC1BnQ,EAAK8B,SAAS,SAAAL,GAAS,MAAC,CAAEyO,UAAWzO,EAAdyO,eA4C3B,OAhDuDE,GAAAH,EAAAlQ,GAOrDkQ,EAAAvP,UAAAC,OAAA,WACU,IAAAuP,EAAAhQ,KAAAuB,MAAAyO,SACAjH,EAAA/I,KAAAM,MAAAyI,SACR,OAAIA,EAAS3E,QAAU,EACd,KAIPf,EAAA,qBAAK1C,UAAWX,KAAKM,MAAMK,WACzB0C,EAAA,cAACuJ,GAAA,EAAU,CAACjM,UAAU,uBAAuBO,QAASlB,KAAKiQ,2BACxDD,EACG7P,OAAA0E,EAAA,EAAA1E,CAAU,qCACVA,OAAA0E,EAAA,EAAA1E,CAAU,qCACdkD,EAAA,cAAC8K,GAAA,EAAY,CAACxN,UAAU,qBAAqBwP,OAAQH,KAEtDA,GACCjH,EAASxE,IAAI,SAAAyE,GAAW,OACtB3F,EAAA,qBAAK1C,UAAU,mCAAmC+D,IAAKsE,EAAQE,SAC7D7F,EAAA,cAAC+M,GAAA,EAAa,CAACC,KAAMrH,EAAQsH,YAAaC,MAAM,GAC7C,SAAAC,GAAiB,OAChBnN,EAAA,uBACEA,EAAA,mBAAG1C,UAAU,oCAAiCqI,EAAQE,SACrDsH,EACAxH,EAAQyH,cACPpN,EAAA,mBACE1C,UAAU,cACVqN,KAAMhF,EAAQyH,aACdxC,IAAI,sBACJC,OAAO,UACN/N,OAAA0E,EAAA,EAAA1E,CAVS,4BAgBpBkD,EAAA,mBAAG1C,UAAU,qBAAqBqI,EAnBd0H,kBAyBlCX,EAhDA,CAAuD1M,EAAA,eCJzC,SAAUsN,GAAkBjQ,OAAE+L,EAAA/L,EAAA+L,KAAMmE,EAAAlQ,EAAAkQ,eAC1CC,EAAcD,EAAe,GACnC,OACEvN,EAAA,qBAAK1C,UAAU,0BACZ8L,GACCpJ,EAAA,oBAAI1C,UAAU,iBACZ0C,EAAA,4BAASoJ,IAGbpJ,EAAA,uBACEA,EAAA,cAACyN,GAAA,iBAAgB,CACfC,eAAgB5Q,OAAA0E,EAAA,EAAA1E,CAAU,8BAC1BiK,GAAG,6BACH4G,OAAQ,CAAE9H,QAAS7F,EAAA,oCAAcwN,EAAY3H,aAGjD7F,EAAA,mBAAG1C,UAAU,cAAckQ,EAAYH,aACvCrN,EAAA,qBAAK1C,UAAU,kBACb0C,EAAA,cAAC+M,GAAA,EAAa,CAACC,KAAMQ,EAAYP,YAAaC,MAAM,GACjD,SAAAC,GAAiB,OAChBnN,EAAA,0BAAOlD,OAAA0E,EAAA,EAAA1E,CAAwB,oBADfqQ,MAInBK,EAAYJ,cACXpN,EAAA,mBACE1C,UAAU,cACVqN,KAAM6C,EAAYJ,aAClBxC,IAAI,sBACJC,OAAO,UACN/N,OAAA0E,EAAA,EAAA1E,CAAU,0BAIjBkD,EAAA,cAAC4N,GAAyB,CAACtQ,UAAU,aAAaoI,SAAU6H,EAAeM,MAAM,KACjF7N,EAAA,qBAAK1C,UAAU,kBACb0C,EAAA,mBACE1C,UAAU,SACVoN,SAAU,aAAa8C,EAAY3H,QAAO,OAC1C8E,KAAM6C,EAAYM,YAClBjD,OAAO,SACN/N,OAAA0E,EAAA,EAAA1E,CAAwB,oBAAqB0Q,EAAY3H,UAE5D7F,EAAA,mBACE1C,UAAU,cACVqN,KAAK,sDACLE,OAAO,UACN/N,OAAA0E,EAAA,EAAA1E,CAAU,+WC1CrB,SAAAN,GAAA,SAAAuR,IAAA,IAAAtR,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAAyB,MAAe,CAAE8P,WAAW,KAoC9B,OArC+CC,GAAAF,EAAAvR,GAG7CuR,EAAA5Q,UAAAC,OAAA,WACU,IAAA4Q,EAAArR,KAAAuB,MAAA8P,UACAT,EAAA5Q,KAAAM,MAAAsQ,eACF3E,EAAS9L,OAAA0E,EAAA,EAAA1E,CAAU,yBACzB,OACEkD,EAAA,cAAC6I,GAAA,EAAK,CAACC,aAAcF,EAAQG,eAAgBpM,KAAKM,MAAM+L,SACtDhJ,EAAA,qBAAK1C,UAAU,cACb0C,EAAA,wBAAK4I,IAEP5I,EAAA,qBAAK1C,UAAU,cACZiQ,EAAerM,IAAI,SAACwE,EAAUtE,GAAQ,OACrCpB,EAAA,cAACsN,GAAiB,CAChBjM,IAAKqE,EAASA,EAAS3E,OAAS,GAAG8E,QACnC0H,eAAgB7H,EAChB0D,KACU,IAARhI,EAAYtE,OAAA0E,EAAA,EAAA1E,CAAU,yBAA2BA,OAAA0E,EAAA,EAAA1E,CALhB,2BAUzCkD,EAAA,qBAAK1C,UAAU,cACZ0Q,GAAahO,EAAA,mBAAG1C,UAAU,yBAC3B0C,EAAA,mBACE1C,UAAU,YACVqN,KAAK,uCACLC,IAAI,sBACJC,OAAO,UACN/N,OAAA0E,EAAA,EAAA1E,CAAU,mCAEbkD,EAAA,cAACuJ,GAAA,EAAe,CAAC1L,QAASlB,KAAKM,MAAM+L,SAAUlM,OAAA0E,EAAA,EAAA1E,CAAU,cAKnEiR,EArCA,CAA+C/N,EAAA,8VCF/C,SAAAxD,GAAA,SAAA0R,IAAA,IAAAzR,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAA0R,SAAU,EACV1R,EAAAyB,MAAe,CAAEkQ,uBAAuB,EAAOb,eAAgB,IAW/D9Q,EAAA4R,mBAAqB,WACnB,OAAAvR,OAAA0L,GAAA,EAAA1L,GAAoBE,KAClB,SAACK,OAAEqI,EAAArI,EAAAqI,SACGjJ,EAAK0R,SACP1R,EAAK8B,SAAS,CAAEgP,eAAgBxH,GAAcN,GAAaC,OAG/D,eAGJjJ,EAAA6R,4BAA8B,WAC5B7R,EAAK8B,SAAS,CAAE6P,uBAAuB,KAGzC3R,EAAA8R,6BAA+B,WAC7B9R,EAAK8B,SAAS,CAAE6P,uBAAuB,OA2B3C,OAvDgDI,GAAAN,EAAA1R,GAI9C0R,EAAA/Q,UAAAsR,kBAAA,WACE9R,KAAKwR,SAAU,EACfxR,KAAK0R,sBAGPH,EAAA/Q,UAAAuR,qBAAA,WACE/R,KAAKwR,SAAU,GAqBjBD,EAAA/Q,UAAAC,OAAA,WACU,IAAAmQ,EAAA5Q,KAAAuB,MAAAqP,eAER,OAAIA,EAAexM,QAAU,EACpB,KAIPf,EAAA,qBAAK1C,UAAU,eACb0C,EAAA,cAACC,EAAA,EAAK,CAACG,QAAQ,QACZtD,OAAA0E,EAAA,EAAA1E,CAAU,gCACXkD,EAAA,cAACuJ,GAAA,EAAM,CAACjM,UAAU,cAAcO,QAASlB,KAAK2R,6BAC3CxR,OAAA0E,EAAA,EAAA1E,CAAU,gBAGdH,KAAKuB,MAAMkQ,uBACVpO,EAAA,cAAC2O,GAAiB,CAChB3F,QAASrM,KAAK4R,6BACdhB,eAAgBA,MAM5BW,EAvDA,CAAgDlO,EAAA,gkBCgBhD4O,GAAA,SAAApS,GAAA,SAAAqS,IAAA,IAAApS,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAA0R,SAAU,EACV1R,EAAAyB,MAAe,CAAE0N,SAAS,GAW1BnP,EAAAqS,aAAe,WACbrS,EAAK8B,SAAS,CAAEqN,SAAS,IACzB9O,OAAA0L,GAAA,EAAA1L,GAAgBE,KACd,SAAA4G,GACMnH,EAAK0R,SACP1R,EAAK8B,SAAS,CAAEqN,SAAS,EAAOhI,YAAWA,KAG/C,WACMnH,EAAK0R,SACP1R,EAAK8B,SAAS,CAAEqN,SAAS,OAMjCnP,EAAAsS,mBAAqB,SAACC,GACpB,IACI5J,EADEI,EAAQP,GAAWxI,EAAKQ,MAAMgS,SAASzJ,OAG3CJ,EADEI,EAAMJ,cAAcL,SAASiK,GACfxJ,EAAMJ,cAAc8J,OAAO,SAAAC,GAAQ,OAAAA,IAAAH,IAEnCxJ,EAAMJ,cAAcgK,OAAOJ,GAE7CvS,EAAK4S,YAAY,CAAEjK,cAAaA,KAGlC3I,EAAA4S,YAAc,SAACC,GACb,IAAM9J,EAAQD,GAAcgK,GAAA,GAAMtK,GAAWxI,EAAKQ,MAAMgS,SAASzJ,OAAW8J,IAC5E7S,EAAKQ,MAAMuS,OAAOC,QAAQ,CAAEC,SAAUjT,EAAKQ,MAAMgS,SAASS,SAAUlK,MAAKA,OAoD7E,OA9FkBmK,GAAAd,EAAArS,GAIhBqS,EAAA1R,UAAAsR,kBAAA,WACE9R,KAAKwR,SAAU,EACfxR,KAAKmS,gBAGPD,EAAA1R,UAAAuR,qBAAA,WACE/R,KAAKwR,SAAU,GAmCjBU,EAAA1R,UAAAyS,cAAA,WACU,IAAAhM,EAAAjH,KAAAuB,MAAA0F,YACR,IAAKA,EACH,OAAO,KAGT,IAAM4B,EAAQP,GAAWtI,KAAKM,MAAMgS,SAASzJ,OAC7C,OAAI3B,GAAUD,GAEV5D,EAAA,cAAC8H,GAAe,CACd1C,cAAeI,EAAMJ,cACrBxB,YAAaA,EACbmE,WAAYpL,KAAKoS,qBAKrB/O,EAAA,cAACmM,GAAkB,CACjB/G,cAAeI,EAAMJ,cACrBxB,YAAaA,EACbmE,WAAYpL,KAAKoS,sBAKvBF,EAAA1R,UAAAC,OAAA,WACQ,IAAAC,EAAAV,KAAAuB,MAAE0N,EAAAvO,EAAAuO,QAAShI,EAAAvG,EAAAuG,YACjB,OACE5D,EAAA,qBAAK1C,UAAU,qBACb0C,EAAA,cAAC6P,GAAA,EAAW,CAACC,YAAY,gBACzB9P,EAAA,cAAC+P,EAAAC,EAAM,CAACrR,MAAO7B,OAAA0E,EAAA,EAAA1E,CAAU,sBACzBkD,EAAA,cAACiQ,GAAkB,MAClBrM,GACC5D,EAAA,cAAC0L,GAAU,CACTC,UAAW9H,GAAUD,GACrBgI,QAASA,EACTnI,SAAUS,GAAmBN,GAC7BgG,iBAAkBjN,KAAKmS,aACvB/D,SAAUjH,GAAYF,GACtBiI,iBAA6BpM,IAAhBmE,EACbiC,QACEhC,GAAUD,GAAeI,GAAkBJ,GAAeG,GAAWH,KAI1EjH,KAAKiT,kBAIdf,EA9FA,CAAkB7O,EAAA,eAgGHrE,EAAA,QAAAmB,OAAAoT,EAAA,YAAWtB,oTC7GZ,SAAU/F,EAAM5L,GAC5B,OACEnB,EAAA,cAACqU,EAAUzL,EAAA,CACTpH,UAAW8S,EAAW,QAAS,CAC7BC,cAA8B,UAAfpT,EAAMsD,KACrB+P,eAA+B,WAAfrT,EAAMsD,KACtBgQ,cAA8B,UAAftT,EAAMsD,OAEvBiQ,QAAQ,EACRC,iBAAkBL,EAAW,gBAAiB,CAAEM,oBAAqBzT,EAAM0T,cACvE1T,IAtBVkT,EAAA,cAAyB,0ZCGX,SAAUN,EAAYxS,OAAEyS,EAAAzS,EAAAyS,YACpC,OACEhU,EAAA,cAAC8U,EAAA,EAAmBrF,SAAQ,KACzB,SAAClO,OAAEwT,EAAAxT,EAAAwT,eAAgBC,EAAAzT,EAAAyT,kBAAwB,OAC1ChV,EAAA,cAACiV,EAAgB,CACfF,eAAgBA,EAChBC,kBAAmBA,EACnBhB,YAAaA,MAavB,IAAAiB,EAAA,SAAAvU,GAAA,SAAAuU,mDAmBA,OAnB+B7T,EAAA6T,EAAAvU,GAC7BuU,EAAA5T,UAAAsR,kBAAA,WACE9R,KAAKM,MAAM4T,eAAelU,KAAKM,MAAM6S,cAGvCiB,EAAA5T,UAAA6T,mBAAA,SAAmBC,GACbA,EAAUnB,cAAgBnT,KAAKM,MAAM6S,cACvCnT,KAAKM,MAAM6T,kBAAkBnU,KAAKM,MAAM6S,aACxCnT,KAAKM,MAAM4T,eAAeI,EAAUnB,eAIxCiB,EAAA5T,UAAAuR,qBAAA,WACE/R,KAAKM,MAAM6T,kBAAkBnU,KAAKM,MAAM6S,cAG1CiB,EAAA5T,UAAAC,OAAA,WACE,OAAO,MAEX2T,EAnBA,CAA+BjV,EAAA,o2BCN/BoV,EAAA,SAAA1U,GAAA,SAAA0U,IAAA,IAAAzU,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAA0R,SAAU,EACV1R,EAAAyB,MAAe,CAAEiT,YAAY,GAU7B1U,EAAA2U,eAAiB,WACX3U,EAAK0R,SACP1R,EAAK8B,SAAS,CAAE4S,YAAY,KAIhC1U,EAAA4U,iBAAmB,SAAChJ,GACdA,IACFA,EAAMC,iBACND,EAAMM,cAAcoB,QAEtBtN,EAAKQ,MAAM+L,WAGbvM,EAAA2L,iBAAmB,SAACC,GAClBA,EAAMC,iBACN7L,EAAK6U,UAGP7U,EAAA8U,kBAAoB,SAAClJ,GACfA,IACFA,EAAMC,iBACND,EAAMM,cAAcoB,QAEtBtN,EAAK6U,UAGP7U,EAAA6U,OAAS,WACP,IAAME,EAAS/U,EAAKQ,MAAMgM,WACtBuI,IACF/U,EAAK8B,SAAS,CAAE4S,YAAY,IAC5BK,EAAOxU,KAAKP,EAAK2U,eAAgB3U,EAAK2U,oBAiB5C,OA5DyClU,EAAAgU,EAAA1U,GAIvC0U,EAAA/T,UAAAsR,kBAAA,WACE9R,KAAKwR,SAAU,GAGjB+C,EAAA/T,UAAAuR,qBAAA,WACE/R,KAAKwR,SAAU,GAsCjB+C,EAAA/T,UAAAC,OAAA,WACE,IAAMC,EAAAV,KAAAM,MAAEgC,EAAA5B,EAAA4B,SAAU2J,EAAAvL,EAAAuL,OAAQI,EAAA3L,EAAA2L,QAAmByI,GAAVpU,EAAA4L,SAAUyI,EAAArU,EAAA,6CAC7C,OACEvB,EAAA,cAAC6V,EAAA,EAAKjN,EAAA,CAACoE,aAAcF,EAAQG,eAAgBC,GAAayI,GACvDxS,EAAS,CACR2S,aAAcjV,KAAK0U,iBACnBQ,aAAclV,KAAKyL,iBACnB0J,cAAenV,KAAK4U,kBACpBJ,WAAYxU,KAAKuB,MAAMiT,eAKjCD,EA5DA,CAAyCpV,EAAA,iWCX5BiW,EAAkB,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,WAE1DC,EAAsB,CAAEH,KAAM,UAAWC,MAAO,OAAQC,IAAK,WAE5D,SAAUnF,EAAc1P,OAAE4B,EAAA5B,EAAA4B,SAAU+N,EAAA3P,EAAA2P,KAAME,EAAA7P,EAAA6P,KACtD,OACEpR,EAAA,cAACsW,EAAA,cAAa1N,EAAA,CAACI,MAAOhI,OAAAuV,EAAA,EAAAvV,CAAUkQ,IAAYE,EAAOiF,EAAsBJ,GACtE9S,2lBCKPqT,EAAA,SAAA9V,GAAA,SAAA8V,IAAA,IAAA7V,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAA0R,SAAU,EAUV1R,EAAA8V,aAAe,WACb,IAAMf,EAAS/U,EAAKQ,MAAMW,UAAUnB,EAAKQ,MAAMuV,aAC/C,OAAIhB,EACKA,EAAOxU,KAAKP,EAAKQ,MAAM+L,QAAS,mBAEvCvM,EAAKQ,MAAM+L,WAKfvM,EAAAgW,mBAAqB,SAACpV,OAAEuU,EAAAvU,EAAAuU,aAAcC,EAAAxU,EAAAwU,aAAcV,EAAA9T,EAAA8T,WAC5ChK,EAAA1K,EAAAQ,MACJgC,EAAAkI,EAAAlI,SACAzB,EAAA2J,EAAA3J,kBACAkV,EAAAvL,EAAAuL,eACA9J,EAAAzB,EAAAyB,OACA+J,EAAAxL,EAAAwL,kBACAC,EAAAzL,EAAAyL,cACAC,EAAA1L,EAAA2L,wBAAA,IAAAD,EAAA/V,OAAAiW,EAAA,EAAAjW,CAAA,UAAA+V,EAEF,OACE/W,EAAA,sBAAMmN,SAAU4I,GACd/V,EAAA,wBAAQwB,UAAU,cAChBxB,EAAA,wBAAK8M,GACJ+J,GAEH7W,EAAA,qBAAKwB,UAAU,cAAc2B,GAC7BnD,EAAA,wBAAQwB,UAAU,cAChBxB,EAAA,cAACkX,EAAA,EAAe,CAAC1V,UAAU,eAAesO,QAASuF,IACnDrV,EAAA,cAACmX,EAAA,EAAY,CACXC,WAAW,EACX5V,UAAWsV,EAAgB,kBAAenT,EAC1CzB,SAAUmT,GAAcuB,GACvBlV,GAEH1B,EAAA,cAACmX,EAAA,EAAe,CAACjV,SAAUmT,EAAYtT,QAAS+T,GAC7CkB,QAgBb,OA/DsD5V,EAAAoV,EAAA9V,GAGpD8V,EAAAnV,UAAAsR,kBAAA,WACE9R,KAAKwR,SAAU,GAGjBmE,EAAAnV,UAAAuR,qBAAA,WACE/R,KAAKwR,SAAU,GA8CjBmE,EAAAnV,UAAAC,OAAA,WACQ,IAAAC,EAAAV,KAAAM,MACAwU,EAAa,CAAE7I,OADbvL,EAAAuL,OACqBI,QADb3L,EAAA2L,QACsB2H,WADbtT,EAAAsT,WACyBpQ,KADblD,EAAAkD,MAErC,OACEzE,EAAA,cAACqX,EAAA,EAAWzO,EAAA,CAACuE,SAAUtM,KAAK4V,cAAkBd,GAC3C9U,KAAK8V,qBAIdH,EA/DA,CAAsDxW,EAAA,m3BCPtDsX,EAAA,SAAA5W,GAAA,SAAA4W,IAAA,IAAA3W,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAA4W,mBAAqB,SAAChW,OAAE2L,EAAA3L,EAAA2L,QAChB7B,EAAA1K,EAAAQ,MAEJS,GADAyJ,EAAAlI,SACAkI,EAAAzJ,WACAC,EAAAwJ,EAAAxJ,YACA2V,EAAAnM,EAAAmM,uBACAC,EAAA7B,EAAAvK,EAAA,iEAEF,OACErL,EAAA,cAAC0X,EAAA,EAAY9O,EAAA,CACXkE,OAAQjL,EACRgV,kBAAmBW,EACnBtK,QAASA,GACLuK,GACH7V,MAQT,OAvB8CR,EAAAkW,EAAA5W,GAoB5C4W,EAAAjW,UAAAC,OAAA,WACE,OAAOtB,EAAA,cAAC2X,EAAA,EAAW,CAACC,MAAO/W,KAAK0W,oBAAqB1W,KAAKM,MAAMgC,WAEpEmU,EAvBA,CAA8CtX,EAAA,0XCK9C6X,EAAA,SAAAnX,GAAA,SAAAmX,IAAA,IAAAlX,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAA0R,SAAU,EACV1R,EAAAyB,MAAe,CAAEwV,OAAO,GAUxBjX,EAAAmX,kBAAoB,WAClBnX,EAAK8B,SAAS,CAAEmV,OAAO,KAGzBjX,EAAA2L,iBAAmB,SAACC,GACdA,GACFA,EAAMC,iBAER7L,EAAK8B,SAAS,CAAEmV,OAAO,KAGzBjX,EAAAoX,iBAAmB,WACbpX,EAAK0R,SACP1R,EAAK8B,SAAS,CAAEmV,OAAO,OAe7B,OAxCyCxW,EAAAyW,EAAAnX,GAIvCmX,EAAAxW,UAAAsR,kBAAA,WACE9R,KAAKwR,SAAU,GAGjBwF,EAAAxW,UAAAuR,qBAAA,WACE/R,KAAKwR,SAAU,GAoBjBwF,EAAAxW,UAAAC,OAAA,WACE,OACEtB,EAAA,cAAAA,EAAA,cACGa,KAAKM,MAAMgC,SAAS,CACnBpB,QAASlB,KAAKiX,kBACd/B,aAAclV,KAAKyL,mBAEpBzL,KAAKuB,MAAMwV,OAAS/W,KAAKM,MAAMyW,MAAM,CAAE1K,QAASrM,KAAKkX,qBAI9DF,EAxCA,CAAyC7X,EAAA,saCHzCiQ,EAAA,SAAAvP,GAAA,SAAAuP,IAAA,IAAAtP,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YAGEF,EAAA0R,SAAU,EACV1R,EAAAyB,MAAe,CAAE4V,cAAc,GA2B/BrX,EAAAsX,YAAc,WACRtX,EAAK0R,UACP1R,EAAK8B,SAAS,CAAEuV,cAAc,IAC9BE,WAAW,WACLvX,EAAK0R,SACP1R,EAAK8B,SAAS,CAAEuV,cAAc,KAE/B,SAgBT,OAtD6C5W,EAAA6O,EAAAvP,GAM3CuP,EAAA5O,UAAAsR,kBAAA,WACE9R,KAAKwR,SAAU,EACXxR,KAAKsX,aACPtX,KAAKuX,UAAY,IAAIC,EAAUxX,KAAKsX,YACpCtX,KAAKuX,UAAUE,GAAG,UAAWzX,KAAKoX,eAItChI,EAAA5O,UAAA6T,mBAAA,WACMrU,KAAKuX,WACPvX,KAAKuX,UAAUG,UAEb1X,KAAKsX,aACPtX,KAAKuX,UAAY,IAAIC,EAAUxX,KAAKsX,YACpCtX,KAAKuX,UAAUE,GAAG,UAAWzX,KAAKoX,eAItChI,EAAA5O,UAAAuR,qBAAA,WACE/R,KAAKwR,SAAU,EACXxR,KAAKuX,WACPvX,KAAKuX,UAAUG,WAenBtI,EAAA5O,UAAAC,OAAA,eAAAX,EAAAE,KACE,OACEb,EAAA,cAACwY,EAAA,EAAO,CAAC/S,QAASzE,OAAAyX,EAAA,EAAAzX,CAAU,iBAAkB0X,QAAS7X,KAAKuB,MAAM4V,cAChEhY,EAAA,cAAC2Y,EAAA,EAAM,CACLnX,UAAWS,EAAW,iCAAkCpB,KAAKM,MAAMK,WAAUoX,sBACxD/X,KAAKM,MAAM+O,UAChC2I,SAAU,SAAA3M,GAAQ,OAACvL,EAAKwX,WAANjM,IACjBrL,KAAKM,MAAMiP,MAAQvP,KAAKM,MAAMiP,MAAQpP,OAAAyX,EAAA,EAAAzX,CAAU,WAK3DiP,EAtDA,CAA6CjQ,EAAA,uDCpC7CL,EAAAC,EAAAC,EAAA,sBAAAiZ,IAAA,IAAA9Y,EAAAL,EAAA,KAAAoZ,EAAApZ,EAAA,KAsBc,SAAUmZ,EAAgBvX,OAAEC,EAAAD,EAAAC,UAAW6J,EAAA9J,EAAAyX,YAAA,IAAA3N,EAAA,eAAAA,EAAuB5G,EAAAlD,EAAAkD,KAC1E,OACEzE,EAAA,cAAC+Y,EAAA,EAAI,CAACvX,UAAWA,EAAWiD,KAAMA,GAChCzE,EAAA,sBACEJ,EAAE,mTACFsL,MAAO,CAAE8N,KAAIA,+kBCCP,SAAUC,EAAc1X,GAAE,IAAAoB,EAAApB,EAAAoB,KAAMxB,EAAAyU,EAAArU,EAAA,UAC5C,OAAOoB,EAAO3C,EAAA,cAACkZ,EAAA,EAAetQ,EAAA,GAAKzH,IAAYnB,EAAA,cAACmZ,EAAA,EAAgBvQ,EAAA,GAAKzH,uCC7BvExB,EAAAC,EAAAC,EAAA,sBAAAuZ,IAAAzZ,EAAAC,EAAAC,EAAA,sBAAAwZ,IAAA1Z,EAAAC,EAAAC,EAAA,sBAAAyZ,IAAA3Z,EAAAC,EAAAC,EAAA,sBAAA0Z,IAAA5Z,EAAAC,EAAAC,EAAA,sBAAA2Z,IAAA7Z,EAAAC,EAAAC,EAAA,sBAAA4Z,IAAA9Z,EAAAC,EAAAC,EAAA,sBAAA6Z,IAAA/Z,EAAAC,EAAAC,EAAA,sBAAA8Z,IAAA,IAAAC,EAAAja,EAAA,IAAAka,EAAAla,EAAA,KAsBM,SAAUyZ,EAAYhM,GAC1B,OAAOpM,OAAA4Y,EAAA,KAAA5Y,CAAK,+BAAgC,CAAEoM,MAAKA,IAAI0M,MAAMD,EAAA,GAGzD,SAAUR,IACd,OAAOrY,OAAA4Y,EAAA,QAAA5Y,CAAQ,oBAAoB8Y,MAAMD,EAAA,GAGrC,SAAUP,IACd,OAAOtY,OAAA4Y,EAAA,QAAA5Y,CAAQ,sBAGX,SAAUuY,IAId,OAAOvY,OAAA4Y,EAAA,QAAA5Y,CAAQ,wBAGX,SAAUwY,IAKd,OAAOxY,OAAA4Y,EAAA,QAAA5Y,CAAQ,mCAGX,SAAUyY,IAKd,OAAOzY,OAAA4Y,EAAA,SAAA5Y,CAAS,0BAGZ,SAAU0Y,IACd,OAAO1Y,OAAA4Y,EAAA,KAAA5Y,CAAK,uBAAuB8Y,MAAMD,EAAA,GAGrC,SAAUF,IAKd,OAAO3Y,OAAA4Y,EAAA,yBAAA5Y,CACLsY,EACA,CAAES,KAAM,EAAGC,eAAgB,IAC3B,SAACzY,GAAe,MAAW,OAAxBA,EAAA0Y","file":"js/293.1560762716920.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { PluginPendingResult } from '../../api/plugins';\n\nexport interface AdminContextInterface {\n  fetchSystemStatus: () => void;\n  fetchPendingPlugins: () => void;\n  pendingPlugins: PluginPendingResult;\n  systemStatus: T.SysStatus;\n}\n\nexport const defaultPendingPlugins = { installing: [], removing: [], updating: [] };\nexport const defaultSystemStatus = 'UP';\n\nconst AdminContext = React.createContext<AdminContextInterface>({\n  fetchSystemStatus: () => {},\n  fetchPendingPlugins: () => {},\n  pendingPlugins: defaultPendingPlugins,\n  systemStatus: defaultSystemStatus\n});\nexport default AdminContext;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport ConfirmButton from '../controls/ConfirmButton';\nimport { translate } from '../../helpers/l10n';\nimport { restart } from '../../api/system';\nimport { Button } from '../ui/buttons';\n\ninterface Props {\n  className?: string;\n  fetchSystemStatus: () => void;\n  systemStatus: T.SysStatus;\n}\n\nexport default class RestartButton extends React.PureComponent<Props> {\n  handleConfirm = () => {\n    return restart().then(this.props.fetchSystemStatus);\n  };\n\n  render() {\n    const { className, systemStatus } = this.props;\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('restart')}\n        modalBody={\n          <>\n            <p className=\"spacer-top spacer-bottom\">\n              {translate('system.are_you_sure_to_restart')}\n            </p>\n            <p>{translate('system.forcing_shutdown_not_recommended')}</p>\n          </>\n        }\n        modalHeader={translate('system.restart_server')}\n        onConfirm={this.handleConfirm}>\n        {({ onClick }) => (\n          <Button\n            className={classNames('button-red', className)}\n            disabled={systemStatus !== 'UP'}\n            onClick={onClick}>\n            {systemStatus === 'RESTARTING'\n              ? translate('system.restart_in_progress')\n              : translate('system.restart_server')}\n          </Button>\n        )}\n      </ConfirmButton>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport OpenCloseIcon from '../icons-components/OpenCloseIcon';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  data?: string;\n  onClick: (data?: string) => void;\n  open: boolean;\n  renderHeader?: () => React.ReactNode;\n  title: React.ReactNode;\n}\n\ninterface State {\n  hoveringInner: boolean;\n}\n\nexport default class BoxedGroupAccordion extends React.PureComponent<Props, State> {\n  state: State = { hoveringInner: false };\n\n  handleClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  onDetailEnter = () => {\n    this.setState({ hoveringInner: true });\n  };\n\n  onDetailLeave = () => {\n    this.setState({ hoveringInner: false });\n  };\n\n  render() {\n    const { className, open, renderHeader, title } = this.props;\n    return (\n      <div\n        className={classNames('boxed-group boxed-group-accordion', className, {\n          'no-hover': this.state.hoveringInner\n        })}>\n        <div className=\"boxed-group-header\" onClick={this.handleClick} role=\"listitem\">\n          <span className=\"boxed-group-accordion-title\">\n            <OpenCloseIcon className=\"little-spacer-right\" open={open} />\n            {title}\n          </span>\n          {renderHeader && renderHeader()}\n        </div>\n        {open && (\n          <div\n            className=\"boxed-group-inner\"\n            onMouseEnter={this.onDetailEnter}\n            onMouseLeave={this.onDetailLeave}>\n            {this.props.children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".status-indicator{display:inline-block;box-sizing:border-box;width:16px;height:16px;border-radius:16px;margin:4px}.status-indicator.small-status-indicator{width:8px;height:8px;border-radius:8px;margin:8px}.status-indicator.big-status-indicator{width:24px;height:24px;border-radius:24px;margin:0}.status-indicator.red{position:relative;z-index:2;background-color:#d4333f}.status-indicator.red:after{position:absolute;z-index:3;display:block;width:6px;height:2px;top:3px;left:1px;background-color:#fff;content:\\\"\\\"}.status-indicator.yellow{background-color:#eabe06}.status-indicator.green{background-color:#0a0}.status-indicator.orange{background-color:#ed7d20}.status-indicator.gray{background-color:#b4b4b4}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".system-info-health-title{margin-top:24px;margin-bottom:16px}.system-info-health-info{margin-top:-12px}.system-info-copy-paste-id-info{max-width:550px;padding:8px 16px;clear:both;line-height:1.8}.system-info-health-info .status-indicator{position:relative;top:8px}.system-info-health-info.no-margin .status-indicator{margin:0}.system-info-section~.system-info-section{margin-top:16px}.system-info-section-item-name{width:25vw;overflow:hidden;text-overflow:ellipsis}.system-upgrade-version{padding:8px}.system-upgrade-version~.system-upgrade-version{margin-top:10px;padding-top:18px;border-top:1px solid #e6e6e6}.system-upgrade-intermediate{padding:6px 10px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface Props {\n  className?: string;\n  health: T.HealthType;\n  healthCause: string;\n}\n\nexport default function HealthCauseItem({ className, health, healthCause }: Props) {\n  return (\n    <Alert\n      className={classNames('boxed-group-accordion-alert', className)}\n      display=\"inline\"\n      variant={health === 'RED' ? 'error' : 'warning'}>\n      {healthCause}\n    </Alert>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport './StatusIndicator.css';\n\ninterface Props {\n  className?: string;\n  color?: string;\n  size?: string;\n}\n\nexport default function StatusIndicator({ className, color, size }: Props) {\n  return (\n    <i\n      className={classNames(\n        'status-indicator',\n        color,\n        {\n          'small-status-indicator': size === 'small',\n          'big-status-indicator': size === 'big'\n        },\n        className\n      )}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport HealthCauseItem from './HealthCauseItem';\nimport StatusIndicator from '../../../../components/common/StatusIndicator';\nimport Tooltip from '../../../../components/controls/Tooltip';\nimport { translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  name?: string;\n  className?: string;\n  health: T.HealthType;\n  healthCauses?: string[];\n}\n\nexport default function HealthItem({ biggerHealth, className, name, health, healthCauses }: Props) {\n  const hasHealthCauses = healthCauses && healthCauses.length > 0 && health !== 'GREEN';\n  const statusIndicator = (\n    <StatusIndicator color={health.toLowerCase()} size={biggerHealth ? 'big' : undefined} />\n  );\n  return (\n    <div className={classNames('system-info-health-info', className)}>\n      {hasHealthCauses &&\n        healthCauses!.map((cause, idx) => (\n          <HealthCauseItem className=\"spacer-right\" health={health} healthCause={cause} key={idx} />\n        ))}\n      {name ? (\n        <Tooltip overlay={translateWithParameters('system.current_health_of_x', name)}>\n          <span>{statusIndicator}</span>\n        </Tooltip>\n      ) : (\n        statusIndicator\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { each, groupBy, memoize, omit, omitBy, pickBy, sortBy } from 'lodash';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsString,\n  RawQuery,\n  serializeStringArray\n} from '../../helpers/query';\nimport { formatMeasure } from '../../helpers/measures';\n\nexport interface Query {\n  expandedCards: string[];\n}\n\nexport const LOGS_LEVELS = ['INFO', 'DEBUG', 'TRACE'];\nconst DEFAULT_LOG_LEVEL = LOGS_LEVELS[0];\n\nexport const APP_NODES_FIELD = 'Application Nodes';\nexport const CE_FIELD_PREFIX = 'Compute Engine';\nexport const CE_LOGGING_FIELD = 'Compute Engine Logging';\nexport const HA_FIELD = 'High Availability';\nexport const HEALTH_CAUSES_FIELD = 'Health Causes';\nexport const HEALTH_FIELD = 'Health';\nexport const LOGS_LEVEL_FIELD = 'Logs Level';\nexport const NAME_FIELD = 'Name';\nexport const NCLOC_FIELD = 'ncloc';\nexport const PLUGINS_FIELD = 'Plugins';\nexport const SEARCH_NODES_FIELD = 'Search Nodes';\nexport const SEARCH_PREFIX = 'Search';\nexport const SERVER_ID_FIELD = 'Server ID';\nexport const SETTINGS_FIELD = 'Settings';\nexport const STATE_FIELD = 'State';\nexport const STATS_FIELD = 'Statistics';\nexport const SYSTEM_FIELD = 'System';\nexport const VERSION_FIELD = 'Version';\nexport const WEB_LOGGING_FIELD = 'Web Logging';\nexport const WEB_PREFIX = 'Web';\n\nexport function ignoreInfoFields(sysInfoObject: T.SysInfoValueObject) {\n  return omit(sysInfoObject, [\n    HEALTH_FIELD,\n    HEALTH_CAUSES_FIELD,\n    NAME_FIELD,\n    PLUGINS_FIELD,\n    SETTINGS_FIELD,\n    SERVER_ID_FIELD,\n    VERSION_FIELD\n  ]);\n}\n\nexport function getHealth(sysInfoObject: T.SysInfoBase) {\n  return sysInfoObject[HEALTH_FIELD];\n}\n\nexport function getHealthCauses(sysInfoObject: T.SysInfoBase) {\n  return sysInfoObject[HEALTH_CAUSES_FIELD];\n}\n\nexport function getLogsLevel(sysInfoObject?: T.SysInfoValueObject): string {\n  if (sysInfoObject !== undefined) {\n    if (isLogInfoBlock(sysInfoObject)) {\n      return sysInfoObject[LOGS_LEVEL_FIELD];\n    } else if (hasLoggingInfo(sysInfoObject)) {\n      return sortBy(\n        [\n          getLogsLevel(sysInfoObject[WEB_LOGGING_FIELD]),\n          getLogsLevel(sysInfoObject[CE_LOGGING_FIELD])\n        ],\n        logLevel => LOGS_LEVELS.indexOf(logLevel)\n      )[1];\n    }\n  }\n  return DEFAULT_LOG_LEVEL;\n}\n\nexport function getAppNodes(sysInfoData: T.SysInfoCluster): T.SysInfoAppNode[] {\n  return sysInfoData[APP_NODES_FIELD];\n}\n\nexport function getSearchNodes(sysInfoData: T.SysInfoCluster): T.SysInfoSearchNode[] {\n  return sysInfoData[SEARCH_NODES_FIELD];\n}\n\nexport function isCluster(\n  sysInfoData: T.SysInfoCluster | T.SysInfoStandalone\n): sysInfoData is T.SysInfoCluster {\n  return sysInfoData[SYSTEM_FIELD] && sysInfoData[SYSTEM_FIELD][HA_FIELD] === true;\n}\n\nexport function isLogInfoBlock(\n  sysInfoObject: T.SysInfoValueObject\n): sysInfoObject is T.SysInfoLogging {\n  return sysInfoObject[LOGS_LEVEL_FIELD] !== undefined;\n}\n\nexport function hasLoggingInfo(\n  sysInfoObject: T.SysInfoValueObject\n): sysInfoObject is T.SysInfoStandalone | T.SysInfoAppNode {\n  return Boolean(sysInfoObject[WEB_LOGGING_FIELD] || sysInfoObject[CE_LOGGING_FIELD]);\n}\n\nexport function getServerId(sysInfoData: T.SysInfoCluster | T.SysInfoStandalone): string {\n  return sysInfoData && sysInfoData[SYSTEM_FIELD][SERVER_ID_FIELD];\n}\n\nexport function getVersion(sysInfoData: T.SysInfoStandalone): string | undefined {\n  return sysInfoData && sysInfoData[SYSTEM_FIELD][VERSION_FIELD];\n}\n\nexport function getClusterVersion(sysInfoData: T.SysInfoCluster): string | undefined {\n  const appNodes = getAppNodes(sysInfoData);\n  return appNodes.length > 0 ? appNodes[0][SYSTEM_FIELD][VERSION_FIELD] : undefined;\n}\n\nexport function getSystemLogsLevel(sysInfoData: T.SysInfoCluster | T.SysInfoStandalone): string {\n  if (isCluster(sysInfoData)) {\n    const logLevels = sortBy(getAppNodes(sysInfoData).map(getLogsLevel), logLevel =>\n      LOGS_LEVELS.indexOf(logLevel)\n    );\n    return logLevels.length > 0 ? logLevels[logLevels.length - 1] : DEFAULT_LOG_LEVEL;\n  } else {\n    return getLogsLevel(sysInfoData);\n  }\n}\n\nexport function getNodeName(nodeInfo: T.SysInfoAppNode | T.SysInfoSearchNode): string {\n  return nodeInfo[NAME_FIELD];\n}\n\nfunction getSystemData(sysInfoData: T.SysInfoBase): T.SysInfoValueObject {\n  const statData: T.SysInfoValueObject = {};\n  const statistics = sysInfoData[STATS_FIELD] as T.SysInfoValueObject; // TODO\n  if (statistics) {\n    statData['Lines of Code'] = formatMeasure(statistics[NCLOC_FIELD] as number, 'INT');\n  }\n  return { ...sysInfoData[SYSTEM_FIELD], ...statData };\n}\n\nexport function getClusterMainCardSection(sysInfoData: T.SysInfoCluster): T.SysInfoValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...omit(sysInfoData, [\n      APP_NODES_FIELD,\n      PLUGINS_FIELD,\n      SEARCH_NODES_FIELD,\n      SETTINGS_FIELD,\n      STATS_FIELD,\n      SYSTEM_FIELD\n    ])\n  };\n}\n\nexport function getStandaloneMainSections(sysInfoData: T.SysInfoBase): T.SysInfoValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omitBy(\n      sysInfoData,\n      (value, key) =>\n        value == null ||\n        [PLUGINS_FIELD, SETTINGS_FIELD, STATS_FIELD, SYSTEM_FIELD].includes(key) ||\n        key.startsWith(CE_FIELD_PREFIX) ||\n        key.startsWith(SEARCH_PREFIX) ||\n        key.startsWith(WEB_PREFIX)\n    ) as T.SysInfoValueObject)\n  };\n}\n\nexport function getStandaloneSecondarySections(sysInfoData: T.SysInfoBase): T.SysInfoSection {\n  return {\n    Web: pickBy(sysInfoData, (_, key) => key.startsWith(WEB_PREFIX)) as T.SysInfoValueObject,\n    'Compute Engine': pickBy(sysInfoData, (_, key) =>\n      key.startsWith(CE_FIELD_PREFIX)\n    ) as T.SysInfoValueObject,\n    'Search Engine': pickBy(sysInfoData, (_, key) =>\n      key.startsWith(SEARCH_PREFIX)\n    ) as T.SysInfoValueObject\n  };\n}\n\nexport function getFileNameSuffix(suffix?: string) {\n  const now = new Date();\n  return (\n    `${suffix ? suffix + '-' : ''}` +\n    `${now.getFullYear()}-${now.getMonth() + 1}-` +\n    `${now.getDate()}-${now.getHours()}-${now.getMinutes()}`\n  );\n}\n\nexport function groupSections(sysInfoData: T.SysInfoValueObject) {\n  const mainSection: T.SysInfoValueObject = {};\n  const sections: T.SysInfoSection = {};\n  each(sysInfoData, (item, key) => {\n    if (typeof item !== 'object' || item instanceof Array) {\n      mainSection[key] = item;\n    } else {\n      sections[key] = item;\n    }\n  });\n  return { mainSection, sections };\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: RawQuery): Query => ({\n    expandedCards: parseAsArray(urlQuery.expand, parseAsString)\n  })\n);\n\nexport const serializeQuery = memoize(\n  (query: Query): RawQuery =>\n    cleanQuery({\n      expand: serializeStringArray(query.expandedCards)\n    })\n);\n\nexport function sortUpgrades(upgrades: T.SystemUpgrade[]): T.SystemUpgrade[] {\n  return sortBy(upgrades, [\n    (upgrade: T.SystemUpgrade) => -Number(upgrade.version.split('.')[0]),\n    (upgrade: T.SystemUpgrade) => -Number(upgrade.version.split('.')[1] || 0),\n    (upgrade: T.SystemUpgrade) => -Number(upgrade.version.split('.')[2] || 0)\n  ]);\n}\n\nexport function groupUpgrades(upgrades: T.SystemUpgrade[]): T.SystemUpgrade[][] {\n  const groupedVersions = groupBy(upgrades, upgrade => upgrade.version.split('.')[0]);\n  const sortedMajor = sortBy(Object.keys(groupedVersions), key => -Number(key));\n  return sortedMajor.map(key => groupedVersions[key]);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport AlertErrorIcon from '../../../../components/icons-components/AlertErrorIcon';\nimport AlertSuccessIcon from '../../../../components/icons-components/AlertSuccessIcon';\nimport { HEALTH_FIELD, STATE_FIELD } from '../../utils';\n\nexport interface Props {\n  name: string;\n  value: T.SysInfoValue;\n}\n\nexport default function SysInfoItem({ name, value }: Props): JSX.Element {\n  if (name === HEALTH_FIELD || name === STATE_FIELD) {\n    return <HealthItem className=\"no-margin\" health={value as T.HealthType} />;\n  }\n  if (value instanceof Array) {\n    return <code>{JSON.stringify(value)}</code>;\n  }\n  switch (typeof value) {\n    case 'boolean':\n      return <BooleanItem value={value} />;\n    case 'object':\n      return <ObjectItem value={value} />;\n    default:\n      return <code>{value}</code>;\n  }\n}\n\nfunction BooleanItem({ value }: { value: boolean }) {\n  if (value) {\n    return <AlertSuccessIcon />;\n  } else {\n    return <AlertErrorIcon />;\n  }\n}\n\nfunction ObjectItem({ value }: { value: T.SysInfoValueObject }) {\n  return (\n    <table className=\"data\">\n      <tbody>\n        {map(value, (value, name) => (\n          <tr key={name}>\n            <td className=\"thin nowrap\">{name}</td>\n            <td>\n              <SysInfoItem name={name} value={value} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport SysInfoItem from './SysInfoItem';\n\ninterface Props {\n  name?: string;\n  items: T.SysInfoValueObject;\n}\n\nexport default function Section({ name, items }: Props) {\n  return (\n    <div className=\"system-info-section\">\n      {name && <h4 className=\"spacer-bottom\">{name}</h4>}\n      <table className=\"data zebra\" id={name}>\n        <tbody>\n          {map(items, (value, name) => {\n            return (\n              <tr key={name}>\n                <td className=\"thin\">\n                  <div className=\"system-info-section-item-name\">{name}</div>\n                </td>\n                <td style={{ wordBreak: 'break-all' }}>\n                  <SysInfoItem name={name} value={value} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport Section from './Section';\nimport { Alert } from '../../../../components/ui/Alert';\nimport BoxedGroupAccordion from '../../../../components/controls/BoxedGroupAccordion';\nimport { LOGS_LEVELS, groupSections, getLogsLevel } from '../../utils';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  health?: T.HealthType;\n  healthCauses?: string[];\n  onClick: (toggledCard: string) => void;\n  open: boolean;\n  name: string;\n  sysInfoData: T.SysInfoValueObject;\n}\n\nexport default function HealthCard({\n  biggerHealth,\n  health,\n  healthCauses,\n  onClick,\n  open,\n  name,\n  sysInfoData\n}: Props) {\n  const { mainSection, sections } = groupSections(sysInfoData);\n  const showFields = open && mainSection && Object.keys(mainSection).length > 0;\n  const showSections = open && sections;\n  const logLevel = getLogsLevel(sysInfoData);\n  const showLogLevelWarning = logLevel && logLevel !== LOGS_LEVELS[0];\n  return (\n    <BoxedGroupAccordion\n      data={name}\n      onClick={onClick}\n      open={open}\n      renderHeader={() => (\n        <>\n          {showLogLevelWarning && (\n            <Alert\n              className=\"boxed-group-accordion-alert spacer-left\"\n              display=\"inline\"\n              variant=\"warning\">\n              {translate('system.log_level.warning.short')}\n            </Alert>\n          )}\n          {health && (\n            <HealthItem\n              biggerHealth={biggerHealth}\n              className=\"pull-right\"\n              health={health}\n              healthCauses={healthCauses}\n              name={name}\n            />\n          )}\n        </>\n      )}\n      title={name}>\n      {showFields && <Section items={mainSection} />}\n      {showSections &&\n        map(sections, (section, name) => <Section items={section} key={name} name={name} />)}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport { translate } from '../../../helpers/l10n';\nimport {\n  getAppNodes,\n  getHealth,\n  getHealthCauses,\n  getClusterMainCardSection,\n  getNodeName,\n  getSearchNodes,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: T.SysInfoCluster;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function ClusterSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getClusterMainCardSection(sysInfoData))}\n      />\n      <li className=\"note system-info-health-title\">\n        {translate('system.application_nodes_title')}\n      </li>\n      {sortBy(getAppNodes(sysInfoData), getNodeName).map((node: T.SysInfoAppNode) => (\n        <HealthCard\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n      <li className=\"note system-info-health-title\">{translate('system.search_nodes_title')}</li>\n      {sortBy(getSearchNodes(sysInfoData), getNodeName).map((node: T.SysInfoSearchNode) => (\n        <HealthCard\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { LOGS_LEVELS } from '../utils';\nimport { setLogLevel } from '../../../api/system';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport { Alert } from '../../../components/ui/Alert';\n\ninterface Props {\n  infoMsg: string;\n  logLevel: string;\n  onChange: (level: string) => void;\n  onClose: () => void;\n}\n\ninterface State {\n  newLevel: string;\n  updating: boolean;\n}\n\nexport default class ChangeLogLevelForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { newLevel: props.logLevel, updating: false };\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { newLevel } = this.state;\n    if (!this.state.updating) {\n      this.setState({ updating: true });\n      setLogLevel(newLevel).then(\n        () => this.props.onChange(newLevel),\n        () => this.setState({ updating: false })\n      );\n    }\n  };\n\n  handleLevelChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    this.setState({ newLevel: event.currentTarget.value });\n\n  render() {\n    const { updating, newLevel } = this.state;\n    const header = translate('system.set_log_level');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"set-log-level-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            {LOGS_LEVELS.map(level => (\n              <p className=\"spacer-bottom\" key={level}>\n                <input\n                  checked={level === newLevel}\n                  className=\"spacer-right text-middle\"\n                  id={`loglevel-${level}`}\n                  name=\"system.log_levels\"\n                  onChange={this.handleLevelChange}\n                  type=\"radio\"\n                  value={level}\n                />\n                <label className=\"text-middle\" htmlFor={`loglevel-${level}`}>\n                  {level}\n                </label>\n              </p>\n            ))}\n            <Alert className=\"spacer-top\" variant=\"info\">\n              {this.props.infoMsg}\n            </Alert>\n            {newLevel !== 'INFO' && (\n              <Alert className=\"spacer-top\" variant=\"warning\">\n                {translate('system.log_level.warning')}\n              </Alert>\n            )}\n          </div>\n          <div className=\"modal-foot\">\n            {updating && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={updating} id=\"set-log-level-submit\">\n              {translate('save')}\n            </SubmitButton>\n            <ResetButtonLink id=\"set-log-level-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChangeLogLevelForm from './ChangeLogLevelForm';\nimport AdminContext from '../../../app/components/AdminContext';\nimport Dropdown from '../../../components/controls/Dropdown';\nimport DropdownIcon from '../../../components/icons-components/DropdownIcon';\nimport RestartButton from '../../../components/common/RestartButton';\nimport { EditButton, Button } from '../../../components/ui/buttons';\nimport { getFileNameSuffix } from '../utils';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  canDownloadLogs: boolean;\n  canRestart: boolean;\n  cluster: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n}\n\ninterface State {\n  logLevel: string;\n  openLogsLevelForm: boolean;\n}\n\nexport default class PageActions extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logLevel: props.logLevel,\n      openLogsLevelForm: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.logLevel !== this.state.logLevel) {\n      this.setState({ logLevel: nextProps.logLevel });\n    }\n  }\n\n  handleLogsLevelOpen = () => {\n    this.setState({ openLogsLevelForm: true });\n  };\n\n  handleLogsLevelChange = (logLevel: string) => {\n    this.setState({ logLevel });\n    this.props.onLogLevelChange();\n    this.handleLogsLevelClose();\n  };\n\n  handleLogsLevelClose = () => {\n    this.setState({ openLogsLevelForm: false });\n  };\n\n  removeElementFocus = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.currentTarget.blur();\n  };\n\n  render() {\n    const infoUrl = getBaseUrl() + '/api/system/info';\n    const logsUrl = getBaseUrl() + '/api/system/logs';\n    return (\n      <div className=\"page-actions\">\n        <span>\n          <span className=\"text-middle\">\n            {translate('system.logs_level')}\n            {':'}\n            <strong className=\"little-spacer-left\">{this.state.logLevel}</strong>\n          </span>\n          <EditButton\n            className=\"spacer-left button-small\"\n            id=\"edit-logs-level-button\"\n            onClick={this.handleLogsLevelOpen}\n          />\n        </span>\n        {this.props.canDownloadLogs && (\n          <Dropdown\n            className=\"display-inline-block spacer-left\"\n            overlay={\n              <ul className=\"menu\">\n                <li>\n                  <a\n                    download=\"sonarqube_app.log\"\n                    href={logsUrl + '?process=app'}\n                    id=\"logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Main Process\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_ce.log\"\n                    href={logsUrl + '?process=ce'}\n                    id=\"ce-logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Compute Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_es.log\"\n                    href={logsUrl + '?process=es'}\n                    id=\"es-logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Search Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_web.log\"\n                    href={logsUrl + '?process=web'}\n                    id=\"web-logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Web Server\n                  </a>\n                </li>\n              </ul>\n            }>\n            <Button>\n              {translate('system.download_logs')}\n              <DropdownIcon className=\"little-spacer-left\" />\n            </Button>\n          </Dropdown>\n        )}\n        <a\n          className=\"button spacer-left\"\n          download={`sonarqube-support-info-${getFileNameSuffix(this.props.serverId)}.json`}\n          href={infoUrl}\n          id=\"download-link\"\n          onClick={this.removeElementFocus}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translate('system.download_system_info')}\n        </a>\n        {this.props.canRestart && (\n          <AdminContext.Consumer>\n            {({ fetchSystemStatus, systemStatus }) => (\n              <RestartButton\n                className=\"spacer-left\"\n                fetchSystemStatus={fetchSystemStatus}\n                systemStatus={systemStatus}\n              />\n            )}\n          </AdminContext.Consumer>\n        )}\n        {this.state.openLogsLevelForm && (\n          <ChangeLogLevelForm\n            infoMsg={translate(\n              this.props.cluster ? 'system.cluster_log_level.info' : 'system.log_level.info'\n            )}\n            logLevel={this.state.logLevel}\n            onChange={this.handleLogsLevelChange}\n            onClose={this.handleLogsLevelClose}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PageActions from './PageActions';\nimport ClipboardButton from '../../../components/controls/ClipboardButton';\nimport { translate } from '../../../helpers/l10n';\nimport { toShortNotSoISOString } from '../../../helpers/dates';\n\nexport interface Props {\n  isCluster: boolean;\n  loading: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n  showActions: boolean;\n  version?: string;\n}\n\nexport default function PageHeader(props: Props) {\n  const { isCluster, loading, logLevel, serverId, showActions, version } = props;\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('system_info.page')}</h1>\n      {showActions && (\n        <PageActions\n          canDownloadLogs={!isCluster}\n          canRestart={!isCluster}\n          cluster={isCluster}\n          logLevel={logLevel}\n          onLogLevelChange={props.onLogLevelChange}\n          serverId={serverId}\n        />\n      )}\n      {loading && (\n        <div className=\"page-actions\">\n          <i className=\"spinner\" />\n        </div>\n      )}\n      {serverId && version && (\n        <div className=\"system-info-copy-paste-id-info boxed-group display-flex-center\">\n          <div className=\"flex-1\">\n            <table className=\"width-100\">\n              <tbody>\n                <tr>\n                  <th>\n                    <strong>{translate('system.server_id')}</strong>\n                  </th>\n                  <td>{serverId}</td>\n                </tr>\n                <tr>\n                  <th>\n                    <strong>{translate('system.version')}</strong>\n                  </th>\n                  <td>{version}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <ClipboardButton\n            className=\"flex-0\"\n            copyValue={`SonarQube ID information\nServer ID: ${serverId}\nVersion: ${version}\nDate: ${toShortNotSoISOString(Date.now())}\n`}\n            label={translate('system.copy_id_info')}\n          />\n        </div>\n      )}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport {\n  getHealth,\n  getHealthCauses,\n  getStandaloneMainSections,\n  getStandaloneSecondarySections,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: T.SysInfoStandalone;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function StandAloneSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getStandaloneMainSections(sysInfoData))}\n      />\n      {map(getStandaloneSecondarySections(sysInfoData), (section, name) => (\n        <HealthCard\n          key={name}\n          name={name}\n          onClick={toggleCard}\n          open={expandedCards.includes(name)}\n          sysInfoData={ignoreInfoFields(section)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport { ButtonLink } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  upgrades: T.SystemUpgrade[];\n}\n\ninterface State {\n  showMore: boolean;\n}\n\nexport default class SystemUpgradeIntermediate extends React.PureComponent<Props, State> {\n  state: State = { showMore: false };\n\n  toggleIntermediatVersions = () => {\n    this.setState(state => ({ showMore: !state.showMore }));\n  };\n\n  render() {\n    const { showMore } = this.state;\n    const { upgrades } = this.props;\n    if (upgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <ButtonLink className=\"little-spacer-bottom\" onClick={this.toggleIntermediatVersions}>\n          {showMore\n            ? translate('system.hide_intermediate_versions')\n            : translate('system.show_intermediate_versions')}\n          <DropdownIcon className=\"little-spacer-left\" turned={showMore} />\n        </ButtonLink>\n        {showMore &&\n          upgrades.map(upgrade => (\n            <div className=\"note system-upgrade-intermediate\" key={upgrade.version}>\n              <DateFormatter date={upgrade.releaseDate} long={true}>\n                {formattedDate => (\n                  <p>\n                    <b className=\"little-spacer-right\">SonarQube {upgrade.version}</b>\n                    {formattedDate}\n                    {upgrade.changeLogUrl && (\n                      <a\n                        className=\"spacer-left\"\n                        href={upgrade.changeLogUrl}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\">\n                        {translate('system.release_notes')}\n                      </a>\n                    )}\n                  </p>\n                )}\n              </DateFormatter>\n              <p className=\"little-spacer-top\">{upgrade.description}</p>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SystemUpgradeIntermediate from './SystemUpgradeIntermediate';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport { translate, translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  type?: string;\n  systemUpgrades: T.SystemUpgrade[];\n}\n\nexport default function SystemUpgradeItem({ type, systemUpgrades }: Props) {\n  const lastUpgrade = systemUpgrades[0];\n  return (\n    <div className=\"system-upgrade-version\">\n      {type && (\n        <h1 className=\"spacer-bottom\">\n          <strong>{type}</strong>\n        </h1>\n      )}\n      <p>\n        <FormattedMessage\n          defaultMessage={translate('system.version_is_availble')}\n          id=\"system.version_is_availble\"\n          values={{ version: <b>SonarQube {lastUpgrade.version}</b> }}\n        />\n      </p>\n      <p className=\"spacer-top\">{lastUpgrade.description}</p>\n      <div className=\"big-spacer-top\">\n        <DateFormatter date={lastUpgrade.releaseDate} long={true}>\n          {formattedDate => (\n            <span>{translateWithParameters('system.released_x', formattedDate)}</span>\n          )}\n        </DateFormatter>\n        {lastUpgrade.changeLogUrl && (\n          <a\n            className=\"spacer-left\"\n            href={lastUpgrade.changeLogUrl}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('system.release_notes')}\n          </a>\n        )}\n      </div>\n      <SystemUpgradeIntermediate className=\"spacer-top\" upgrades={systemUpgrades.slice(1)} />\n      <div className=\"big-spacer-top\">\n        <a\n          className=\"button\"\n          download={`sonarqube-${lastUpgrade.version}.zip`}\n          href={lastUpgrade.downloadUrl}\n          target=\"blank\">\n          {translateWithParameters('system.download_x', lastUpgrade.version)}\n        </a>\n        <a\n          className=\"spacer-left\"\n          href=\"https://redirect.sonarsource.com/doc/upgrading.html\"\n          target=\"_blank\">\n          {translate('system.how_to_upgrade')}\n        </a>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeItem from './SystemUpgradeItem';\nimport Modal from '../../../../components/controls/Modal';\nimport { translate } from '../../../../helpers/l10n';\nimport { ResetButtonLink } from '../../../../components/ui/buttons';\n\ninterface Props {\n  systemUpgrades: T.SystemUpgrade[][];\n  onClose: () => void;\n}\n\ninterface State {\n  upgrading: boolean;\n}\n\nexport default class SystemUpgradeForm extends React.PureComponent<Props, State> {\n  state: State = { upgrading: false };\n\n  render() {\n    const { upgrading } = this.state;\n    const { systemUpgrades } = this.props;\n    const header = translate('system.system_upgrade');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <div className=\"modal-body\">\n          {systemUpgrades.map((upgrades, idx) => (\n            <SystemUpgradeItem\n              key={upgrades[upgrades.length - 1].version}\n              systemUpgrades={upgrades}\n              type={\n                idx === 0 ? translate('system.latest_version') : translate('system.lts_version')\n              }\n            />\n          ))}\n        </div>\n        <div className=\"modal-foot\">\n          {upgrading && <i className=\"spinner spacer-right\" />}\n          <a\n            className=\"pull-left\"\n            href=\"https://www.sonarqube.org/downloads/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('system.see_sonarqube_downloads')}\n          </a>\n          <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeForm from './SystemUpgradeForm';\nimport { sortUpgrades, groupUpgrades } from '../../utils';\nimport { getSystemUpgrades } from '../../../../api/system';\nimport { Button } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface State {\n  systemUpgrades: T.SystemUpgrade[][];\n  openSystemUpgradeForm: boolean;\n}\n\nexport default class SystemUpgradeNotif extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = { openSystemUpgradeForm: false, systemUpgrades: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSystemUpgrade();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSystemUpgrade = () =>\n    getSystemUpgrades().then(\n      ({ upgrades }) => {\n        if (this.mounted) {\n          this.setState({ systemUpgrades: groupUpgrades(sortUpgrades(upgrades)) });\n        }\n      },\n      () => {}\n    );\n\n  handleOpenSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: true });\n  };\n\n  handleCloseSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: false });\n  };\n\n  render() {\n    const { systemUpgrades } = this.state;\n\n    if (systemUpgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"page-notifs\">\n        <Alert variant=\"info\">\n          {translate('system.new_version_available')}\n          <Button className=\"spacer-left\" onClick={this.handleOpenSystemUpgradeForm}>\n            {translate('learn_more')}\n          </Button>\n        </Alert>\n        {this.state.openSystemUpgradeForm && (\n          <SystemUpgradeForm\n            onClose={this.handleCloseSystemUpgradeForm}\n            systemUpgrades={systemUpgrades}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Helmet from 'react-helmet';\nimport ClusterSysInfos from './ClusterSysInfos';\nimport PageHeader from './PageHeader';\nimport StandaloneSysInfos from './StandaloneSysInfos';\nimport SystemUpgradeNotif from './system-upgrade/SystemUpgradeNotif';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { translate } from '../../../helpers/l10n';\nimport { getSystemInfo } from '../../../api/system';\nimport {\n  getServerId,\n  getSystemLogsLevel,\n  isCluster,\n  parseQuery,\n  Query,\n  serializeQuery,\n  getVersion,\n  getClusterVersion\n} from '../utils';\nimport '../styles.css';\n\ntype Props = WithRouterProps;\n\ninterface State {\n  loading: boolean;\n  sysInfoData?: T.SysInfoCluster | T.SysInfoStandalone;\n}\n\nclass App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSysInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSysInfo = () => {\n    this.setState({ loading: true });\n    getSystemInfo().then(\n      sysInfoData => {\n        if (this.mounted) {\n          this.setState({ loading: false, sysInfoData });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  toggleSysInfoCards = (toggledCard: string) => {\n    const query = parseQuery(this.props.location.query);\n    let expandedCards;\n    if (query.expandedCards.includes(toggledCard)) {\n      expandedCards = query.expandedCards.filter(card => card !== toggledCard);\n    } else {\n      expandedCards = query.expandedCards.concat(toggledCard);\n    }\n    this.updateQuery({ expandedCards });\n  };\n\n  updateQuery = (newQuery: Query) => {\n    const query = serializeQuery({ ...parseQuery(this.props.location.query), ...newQuery });\n    this.props.router.replace({ pathname: this.props.location.pathname, query });\n  };\n\n  renderSysInfo() {\n    const { sysInfoData } = this.state;\n    if (!sysInfoData) {\n      return null;\n    }\n\n    const query = parseQuery(this.props.location.query);\n    if (isCluster(sysInfoData)) {\n      return (\n        <ClusterSysInfos\n          expandedCards={query.expandedCards}\n          sysInfoData={sysInfoData}\n          toggleCard={this.toggleSysInfoCards}\n        />\n      );\n    }\n    return (\n      <StandaloneSysInfos\n        expandedCards={query.expandedCards}\n        sysInfoData={sysInfoData}\n        toggleCard={this.toggleSysInfoCards}\n      />\n    );\n  }\n\n  render() {\n    const { loading, sysInfoData } = this.state;\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"system_info\" />\n        <Helmet title={translate('system_info.page')} />\n        <SystemUpgradeNotif />\n        {sysInfoData && (\n          <PageHeader\n            isCluster={isCluster(sysInfoData)}\n            loading={loading}\n            logLevel={getSystemLogsLevel(sysInfoData)}\n            onLogLevelChange={this.fetchSysInfo}\n            serverId={getServerId(sysInfoData)}\n            showActions={sysInfoData !== undefined}\n            version={\n              isCluster(sysInfoData) ? getClusterVersion(sysInfoData) : getVersion(sysInfoData)\n            }\n          />\n        )}\n        {this.renderSysInfo()}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n          {headerDescription}\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as Clipboard from 'clipboard';\nimport Tooltip from './Tooltip';\nimport { Button } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  copyValue: string;\n  label?: string;\n}\n\ninterface State {\n  tooltipShown: boolean;\n}\n\nexport default class ClipboardButton extends React.PureComponent<Props, State> {\n  clipboard?: Clipboard;\n  copyButton?: HTMLElement | null;\n  mounted = false;\n  state: State = { tooltipShown: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.copyButton) {\n      this.clipboard = new Clipboard(this.copyButton);\n      this.clipboard.on('success', this.showTooltip);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.clipboard) {\n      this.clipboard.destroy();\n    }\n    if (this.copyButton) {\n      this.clipboard = new Clipboard(this.copyButton);\n      this.clipboard.on('success', this.showTooltip);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.clipboard) {\n      this.clipboard.destroy();\n    }\n  }\n\n  showTooltip = () => {\n    if (this.mounted) {\n      this.setState({ tooltipShown: true });\n      setTimeout(() => {\n        if (this.mounted) {\n          this.setState({ tooltipShown: false });\n        }\n      }, 1000);\n    }\n  };\n\n  render() {\n    return (\n      <Tooltip overlay={translate('copied_action')} visible={this.state.tooltipShown}>\n        <Button\n          className={classNames('js-copy-to-clipboard no-select', this.props.className)}\n          data-clipboard-text={this.props.copyValue}\n          innerRef={node => (this.copyButton = node)}>\n          {this.props.label ? this.props.label : translate('copy')}\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChevronDownIcon({ className, fill = 'currentColor', size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M7.72 11.596L3.119 6.992A.382.382 0 0 1 3 6.713c0-.108.04-.2.118-.279l1.03-1.03a.382.382 0 0 1 .278-.117c.108 0 .201.04.28.117L8 8.7l3.294-3.295a.382.382 0 0 1 .28-.117c.108 0 .2.04.279.117l1.03 1.03a.382.382 0 0 1 .117.28c0 .107-.04.2-.118.278L8.28 11.596a.382.382 0 0 1-.279.117.382.382 0 0 1-.28-.117z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IconProps } from './Icon';\nimport ChevronDownIcon from './ChevronDownIcon';\nimport ChevronRightIcon from './ChevronRightcon';\n\ninterface Props extends IconProps {\n  open: boolean;\n}\n\nexport default function OpenCloseIcon({ open, ...props }: Props) {\n  return open ? <ChevronDownIcon {...props} /> : <ChevronRightIcon {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, requestTryAndRepeatUntil } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<T.SysInfoCluster | T.SysInfoStandalone> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: T.SysStatus }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: T.SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nexport function waitSystemUPStatus(): Promise<{\n  id: string;\n  version: string;\n  status: T.SysStatus;\n}> {\n  return requestTryAndRepeatUntil(\n    getSystemStatus,\n    { max: -1, slowThreshold: -15 },\n    ({ status }) => status === 'UP'\n  );\n}\n"],"sourceRoot":""}